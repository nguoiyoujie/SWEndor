bool g_b = true;
int g_i = 10;
float g_f = 0.4;
string g_s = "test";


globals:
	Assert.AreEqual(g_b, true);
	Assert.AreEqual(g_i, 10);
	Assert.AreEqual(g_f, 0.4);
	Assert.AreEqual(g_s, "test");


math_uops:
	Assert.AreEqual(2 - 6.3, -4.3);


math_bops:
	Assert.AreEqual(1 + 1, 2);
	Assert.AreEqual(2 - 3, -1);
	Assert.AreEqual(4 * 5.2, 20.8);
	Assert.AreEqual(10 / 0.25, 40.0);
	Assert.AreEqual(10 % 3, 1);
	Assert.AreEqual(2 * (4 + 5), 18);
	Assert.AreEqual(3 - (6 - 2 / 2), -2);
	Assert.AreEqual(((2 + 2) * (1.0 / 2)) - ((2 + 2) / (2 / 2)), -2);


math_tops:
	int x = 4;
	Assert.AreEqual((x > 2) ? x * 2 : x / 2, 8);
	x = 1;
	Assert.AreEqual((x > 2) ? x * 2 : x / 2, 0);
	float	y = 1;
	Assert.AreEqual((y > 2) ? y * 2 : y / 2, 0.5);


cmp:
	int x = 10;
	Assert.AreEqual(x > 5, true);
	Assert.AreEqual(x > 10, false);
	Assert.AreEqual(x > 12, false);

	Assert.AreEqual(x < 6, false);
	Assert.AreEqual(x < 8, false);
	Assert.AreEqual(x < 11, true);

	Assert.AreEqual(x > -x, true);

	Assert.AreEqual(x >= 7, true);
	Assert.AreEqual(x >= 10, true);
	Assert.AreEqual(x >= 13, false);

	Assert.AreEqual(x <= 3, false);
	Assert.AreEqual(x <= 10, true);
	Assert.AreEqual(x <= 19, true);


if:
	int x = 100;
	if (x >= 10)
		x = 50;
	Assert.AreEqual(x, 50);

	if (x >= 10)
		x = -1;
	else
		x = 10;
	Assert.AreEqual(x, -1);
	
	if (x >= 10)
		x = -1;
	else
		x = 10;
	Assert.AreEqual(x, 10);


while:
	float n = 0.1;
	int i = 1;

	while (i < 20)
	{
		n += 0.1;
		i += 1;
	}
	Assert.AreEqual(n, 2);


for:
	float n = 0.5;
	for (int i = 0; i < 5; i += 1)
	{
		n += i;
	}
	Assert.AreEqual(n, 10.5);


foreach:
	float n = 0.4;
	foreach (int i in {2,5,7})
	{
		n *= i;
	}
	Assert.AreEqual(n, 28);




