<?xml version="1.0"?>
<doc>
    <assembly>
        <name>SWEndor</name>
    </assembly>
    <members>
        <member name="T:SWEndor.Actors.Models.AIData">
            <summary>
            Storage of AI states per actor, transferrable across actions
            </summary>
        </member>
        <member name="T:SWEndor.Actors.Models.ArmorModel">
            <summary>
            A light implementation of an Armor system
            </summary>
        </member>
        <member name="M:SWEndor.ActorTypes.Components.SystemData.AutoParts(SWEndor.ActorTypes.ActorTypeInfo)">
            <summary>
            Automatically generate parts. Use after other systems have been initialized.
            </summary>
            <param name=""></param>
        </member>
        <member name="T:SWEndor.ActorTypes.Components.RotateOnly">
            <summary>
            Implementation of Move behavior that rotates only
            </summary>
        </member>
        <member name="T:SWEndor.ActorTypes.Components.MoveForwardOnly">
            <summary>
            Implementation of Move behavior that moves forward only
            </summary>
        </member>
        <member name="T:SWEndor.ActorTypes.Components.MoveLaser">
            <summary>
            Implementation of Move behavior that moves forward at laser speed
            </summary>
        </member>
        <member name="T:SWEndor.ActorTypes.Components.NoMove">
            <summary>
            Implementation of Move behavior that does not move
            </summary>
        </member>
        <member name="T:SWEndor.ActorTypes.Components.MoveNormal">
            <summary>
            Implementation of Move behavior with full range of movement
            </summary>
        </member>
        <member name="T:SWEndor.ActorTypes.Components.ArmorData">
            <summary>
            A light implementation of an Armor system, replaces old Damage and CollisionDamage coefficients
            </summary>
        </member>
        <member name="M:SWEndor.Core.Session.IsLowFPS">
            <summary>
            Checks if the current FPS is below the LowFPSLimit
            </summary>
            <returns></returns>
        </member>
        <member name="P:SWEndor.Core.Session.PerfCullModifier">
            <summary>
            Determines the modifiers to render culling distance to increase performance
            </summary>
        </member>
        <member name="T:SWEndor.Models.ActorState">
            <summary>
            Describe the state of an Actor as a game object
            </summary>
        </member>
        <member name="F:SWEndor.Models.ActorState.NORMAL">
            <summary>
            Actor is executing normal game functions
            </summary>
        </member>
        <member name="F:SWEndor.Models.ActorState.DYING">
            <summary>
            Actor is dying, and will be dead soon
            </summary>
        </member>
        <member name="F:SWEndor.Models.ActorState.DEAD">
            <summary>
            Actor is dead and will be ripe for disposal
            </summary>
        </member>
        <member name="T:SWEndor.Models.CreationState">
            <summary>
            Describe the state of an Actor as handled by its Factory.
            </summary>
        </member>
        <member name="F:SWEndor.Models.CreationState.PLANNED">
            <summary>
            Actor is not yet generated.
            </summary>
        </member>
        <member name="F:SWEndor.Models.CreationState.GENERATED">
            <summary>
            Actor is generated, but is not yet eligible for game operations 
            </summary>
        </member>
        <member name="F:SWEndor.Models.CreationState.ACTIVE">
            <summary>
            Actor is in a valid state for running game operations.
            </summary>
        </member>
        <member name="F:SWEndor.Models.CreationState.PREDISPOSE">
            <summary>
            Actor is marked for clean-up
            </summary>
        </member>
        <member name="F:SWEndor.Models.CreationState.DISPOSING">
            <summary>
            Actor is destroyed and awaits clean-up
            </summary>
        </member>
        <member name="F:SWEndor.Models.CreationState.DISPOSED">
            <summary>
            Actor is destroyed and awaits clean-up / reuse
            </summary>
        </member>
        <member name="M:SWEndor.Models.DistanceModel.GetRoughDistance(MTV3D65.TV_3DVECTOR,MTV3D65.TV_3DVECTOR)">
            <summary>
            Gets a higher bound on the distance between Actors by taking the Manhattan distance.
            </summary>
            <returns></returns>
        </member>
        <member name="M:SWEndor.Models.DistanceModel.GetRoughDistance(SWEndor.Models.ITransformable,SWEndor.Models.ITransformable)">
            <summary>
            Gets a higher bound on the distance between Actors by taking the Manhattan distance.
            </summary>
            <returns></returns>
        </member>
        <member name="M:SWEndor.Models.DistanceModel.GetDistance``2(SWEndor.Core.Engine,``0,``1,System.Single)">
            <summary>
            Gets the distance between two objects, up to a limit. Returns the distance or limit
            </summary>
            <returns></returns>
        </member>
        <member name="M:SWEndor.Models.DistanceModel.GetDistance``2(SWEndor.Core.Engine,``0,``1)">
            <summary>
            Gets the distance between two objects
            </summary>
            <returns></returns>
        </member>
        <member name="M:SWEndor.Models.DistanceModel.GetDistance(MTV3D65.TV_3DVECTOR,MTV3D65.TV_3DVECTOR)">
            <summary>
            Gets the distance between two points
            </summary>
            <returns></returns>
        </member>
        <member name="T:SWEndor.Models.RadarType">
            <summary>
            The 'type' of an Actor for drawing on the radar
            </summary>
        </member>
        <member name="F:SWEndor.Models.RadarType.NULL">
            <summary>
            Draw nothing
            </summary>
        </member>
        <member name="F:SWEndor.Models.RadarType.TRAILLINE">
            <summary>
            Draw a trail line from previous position to current position
            </summary>
        </member>
        <member name="F:SWEndor.Models.RadarType.HOLLOW_SQUARE">
            <summary>
            Draw an unfilled square
            </summary>
        </member>
        <member name="F:SWEndor.Models.RadarType.FILLED_SQUARE">
            <summary>
            Draw an filled square
            </summary>
        </member>
        <member name="F:SWEndor.Models.RadarType.HOLLOW_CIRCLE_S">
            <summary>
            Draw an hollow circle, using 4 points
            </summary>
        </member>
        <member name="F:SWEndor.Models.RadarType.HOLLOW_CIRCLE_M">
            <summary>
            Draw an hollow circle, using 12 points
            </summary>
        </member>
        <member name="F:SWEndor.Models.RadarType.HOLLOW_CIRCLE_L">
            <summary>
            Draw an hollow circle, using 36 points
            </summary>
        </member>
        <member name="F:SWEndor.Models.RadarType.FILLED_CIRCLE_S">
            <summary>
            Draw an filled circle, using 4 points
            </summary>
        </member>
        <member name="F:SWEndor.Models.RadarType.FILLED_CIRCLE_M">
            <summary>
            Draw an filled circle, using 12 points
            </summary>
        </member>
        <member name="F:SWEndor.Models.RadarType.FILLED_CIRCLE_L">
            <summary>
            Draw an filled circle, using 36 points
            </summary>
        </member>
        <member name="F:SWEndor.Models.RadarType.RECTANGLE_GIANT">
            <summary>
            Draw a large rectangle that obeys xz-rotation (capital ships)
            </summary>
        </member>
        <member name="F:SWEndor.Models.RadarType.TRIANGLE_GIANT">
            <summary>
            Draw a large triangle that obeys xz-rotation (capital ships - star destroyers)
            </summary>
        </member>
        <member name="T:SWEndor.Models.TargetType">
            <summary>
            The 'type' of an Actor for targeting purposes
            </summary>
        </member>
        <member name="F:SWEndor.Models.TargetType.LASER">
            <summary>
            Actor is a laser
            </summary>
        </member>
        <member name="F:SWEndor.Models.TargetType.MUNITION">
            <summary>
            Actor is a munition
            </summary>
        </member>
        <member name="F:SWEndor.Models.TargetType.FLOATING">
            <summary>
            Actor is a non-combat object
            </summary>
        </member>
        <member name="F:SWEndor.Models.TargetType.FIGHTER">
            <summary>
            Actor is a fighter
            </summary>
        </member>
        <member name="F:SWEndor.Models.TargetType.SHIP">
            <summary>
            Actor is a large vessel
            </summary>
        </member>
        <member name="F:SWEndor.Models.TargetType.STRUCTURE">
            <summary>
            Actor is a 'structure' (think towers)
            </summary>
        </member>
        <member name="F:SWEndor.Models.TargetType.ADDON">
            <summary>
            Actor is a dedicated add-on to another actor
            </summary>
        </member>
        <member name="F:SWEndor.Models.TargetType.SHIELDGENERATOR">
            <summary>
            Actor is a shield generator (special add on)
            </summary>
        </member>
        <member name="F:SWEndor.Models.TargetType.ANY">
            <summary>
            Actor is considered a member of all targetable types.
            </summary>
        </member>
        <member name="T:SWEndor.SpawnerInfoDecorator">
            <summary>
            Static place-holder for data
            </summary>
        </member>
        <member name="T:SWEndor.ProjectileTypes.Components.MoveForwardOnly">
            <summary>
            Implementation of Move behavior that moves forward only
            </summary>
        </member>
        <member name="T:SWEndor.ProjectileTypes.Components.MoveLaser">
            <summary>
            Implementation of Move behavior that moves forward at laser speed
            </summary>
        </member>
        <member name="T:SWEndor.ProjectileTypes.Components.MoveNormal">
            <summary>
            Implementation of Move behavior with full range of movement
            </summary>
        </member>
        <member name="T:SWEndor.ProjectileTypes.Components.NoMove">
            <summary>
            Implementation of Move behavior that does not move
            </summary>
        </member>
        <member name="T:SWEndor.ProjectileTypes.Components.RotateOnly">
            <summary>
            Implementation of Move behavior that rotates only
            </summary>
        </member>
        <member name="M:SWEndor.Scenarios.Scripting.Functions.MiscFns.IsNull(Primrose.Expressions.AContext,Primrose.Expressions.Val[])">
            <summary>
            Gets the element of an array. This is functionally equivalent to the indexer 'array[i]', except that this function cannot be used on float2/float3/float4
            </summary>
            <param name="context">The game context</param>
            <param name="ps">
              Parameters: 
                BOOL[]/INT[]/FLOAT[] array
            </param>
            <returns>BOOL/INT/FLOAT, depending on the input</returns>
        </member>
        <member name="M:SWEndor.Scenarios.Scripting.Functions.MiscFns.GetArrayElement(SWEndor.Scenarios.Scripting.Expressions.Context,Primrose.Expressions.Val[])">
            <summary>
            Gets the element of an array. This is functionally equivalent to the indexer 'array[i]', except that this function cannot be used on float2/float3/float4
            </summary>
            <param name="context">The game context</param>
            <param name="ps">
              Parameters: 
                BOOL[]/INT[]/FLOAT[] array
            </param>
            <returns>BOOL/INT/FLOAT, depending on the input</returns>
        </member>
        <member name="M:SWEndor.Scenarios.Scripting.Functions.ScoreFns.SetScorePerLife(SWEndor.Scenarios.Scripting.Expressions.Context,Primrose.Expressions.Val[])">
            <summary>
            Sets the score increment required for the player to receive 1 life
            </summary>
            <param name="context">The game context</param>
            <param name="ps">
              Parameters: 
                FLOAT score
            </param>
            <returns>NULL</returns>
        </member>
        <member name="M:SWEndor.Scenarios.Scripting.Functions.ScoreFns.SetScoreForNextLife(SWEndor.Scenarios.Scripting.Expressions.Context,Primrose.Expressions.Val[])">
            <summary>
            Sets the next score required for the player to receive 1 life
            </summary>
            <param name="context">The game context</param>
            <param name="ps">
              Parameters: 
                FLOAT score
            </param>
            <returns>NULL</returns>
        </member>
        <member name="M:SWEndor.Scenarios.Scripting.Functions.ScoreFns.ResetScore(SWEndor.Scenarios.Scripting.Expressions.Context,Primrose.Expressions.Val[])">
            <summary>
            Resets the player score. This also resets the player statistics such as kill/hit/damage/death count
            </summary>
            <param name="context">The game context</param>
            <param name="ps">
              Parameters: 
                NONE
            </param>
            <returns>NULL</returns>
        </member>
        <member name="M:SWEndor.Scenarios.Scripting.Functions.ScriptingFns.CallScript(SWEndor.Scenarios.Scripting.Expressions.Context,Primrose.Expressions.Val[])">
            <summary>
            Calls another script for execution
            </summary>
            <param name="context">The game context</param>
            <param name="ps">
              Parameters: 
                STRING script_name
            </param>
            <returns>TRUE if a script is found, FALSE otherwise</returns>
        </member>
        <member name="M:SWEndor.Scenarios.Scripting.Functions.ScriptingFns.CallScriptX(SWEndor.Scenarios.Scripting.Expressions.Context,Primrose.Expressions.Val[])">
            <summary>
            Calls another script for execution. This is the strict counterpart to CallScript.
            </summary>
            <param name="context">The game context</param>
            <param name="ps">
              Parameters: 
                STRING script_name
            </param>
            <returns>NULL. Throws an exception if no script is found.</returns>
        </member>
        <member name="M:SWEndor.Scenarios.Scripting.Functions.PlayerFns.AssignActor(SWEndor.Scenarios.Scripting.Expressions.Context,Primrose.Expressions.Val[])">
            <summary>
            Assigns an actor of this ID the player actor ID. Unassigns the player actor if actor_id is negative.
            </summary>
            <param name="context">The game context</param>
            <param name="ps">
              Parameters: 
                INT actor_id
            </param>
            <returns>TRUE if the assignment is successful, otherwise (i.e. there is no actor having this ID) returns FALSE. If the actor_id is negative, always returns TRUE.</returns>
        </member>
        <member name="M:SWEndor.Scenarios.Scripting.Functions.PlayerFns.GetActor(SWEndor.Scenarios.Scripting.Expressions.Context,Primrose.Expressions.Val[])">
            <summary>
            Returns the player actor ID
            </summary>
            <param name="context">The game context</param>
            <param name="ps">
              Parameters: 
                NONE
            </param>
            <returns>INT representing the actor's ID if an actor is found, otherwise returns -1</returns>
        </member>
        <member name="M:SWEndor.Scenarios.Scripting.Functions.PlayerFns.RequestSpawn(SWEndor.Scenarios.Scripting.Expressions.Context,Primrose.Expressions.Val[])">
            <summary>
            Toggles a request to spawn the player. If a spawner belonging to the player's faction exists, it will respawn the player. Otherwise, this has no effect.
            </summary>
            <param name="context">The game context</param>
            <param name="ps">
              Parameters: 
                NONE
            </param>
            <returns>NULL</returns>
        </member>
        <member name="M:SWEndor.Scenarios.Scripting.Functions.PlayerFns.SetMovementEnabled(SWEndor.Scenarios.Scripting.Expressions.Context,Primrose.Expressions.Val[])">
            <summary>
            Enables/disables the player movement controls 
            </summary>
            <param name="context">The game context</param>
            <param name="ps">
              Parameters: 
                BOOL enabled
            </param>
            <returns>NULL</returns>
        </member>
        <member name="M:SWEndor.Scenarios.Scripting.Functions.PlayerFns.SetAI(SWEndor.Scenarios.Scripting.Expressions.Context,Primrose.Expressions.Val[])">
            <summary>
            Enables/disables the player AI
            </summary>
            <param name="context">The game context</param>
            <param name="ps">
              Parameters: 
                BOOL enabled
            </param>
            <returns>NULL</returns>
        </member>
        <member name="M:SWEndor.Scenarios.Scripting.Functions.PlayerFns.SetLives(SWEndor.Scenarios.Scripting.Expressions.Context,Primrose.Expressions.Val[])">
            <summary>
            Sets the number of lives for the player
            </summary>
            <param name="context">The game context</param>
            <param name="ps">
              Parameters: 
                INT lives
            </param>
            <returns>NULL</returns>
        </member>
        <member name="M:SWEndor.Scenarios.Scripting.Functions.PlayerFns.DecreaseLives(SWEndor.Scenarios.Scripting.Expressions.Context,Primrose.Expressions.Val[])">
            <summary>
            Decrements 1 life from the player
            </summary>
            <param name="context">The game context</param>
            <param name="ps">
              Parameters: 
                NONE
            </param>
            <returns>NULL</returns>
        </member>
        <member name="M:SWEndor.Scenarios.Scripting.Functions.FactionFns.AddFaction(SWEndor.Scenarios.Scripting.Expressions.Context,Primrose.Expressions.Val[])">
            <summary>
            Creates a faction. This function does nothing if a faction of the same name already exists.
            </summary>
            <param name="context">The game context</param>
            <param name="ps">
              Parameters: 
                0 STRING faction_name
                1 FLOAT3 faction_color
            </param>
            <returns>NULL</returns>
        </member>
        <member name="M:SWEndor.Scenarios.Scripting.Functions.UIFns.SetUILine1Color(SWEndor.Scenarios.Scripting.Expressions.Context,Primrose.Expressions.Val[])">
            <summary>
            Sets the color of line 1 of the scenario UI
            </summary>
            <param name="context">The game context</param>
            <param name="ps">
              Parameters: 
                FLOAT3 color
            </param>
            <returns>NULL</returns>
        </member>
        <member name="M:SWEndor.Scenarios.Scripting.Functions.UIFns.SetUILine2Color(SWEndor.Scenarios.Scripting.Expressions.Context,Primrose.Expressions.Val[])">
            <summary>
            Sets the color of line 2 of the scenario UI
            </summary>
            <param name="context">The game context</param>
            <param name="ps">
              Parameters: 
                FLOAT3 color
            </param>
            <returns>NULL</returns>
        </member>
        <member name="M:SWEndor.Scenarios.Scripting.Functions.UIFns.SetUILine3Color(SWEndor.Scenarios.Scripting.Expressions.Context,Primrose.Expressions.Val[])">
            <summary>
            Sets the color of line 3 of the scenario UI
            </summary>
            <param name="context">The game context</param>
            <param name="ps">
              Parameters: 
                FLOAT3 color
            </param>
            <returns>NULL</returns>
        </member>
        <member name="M:SWEndor.Scenarios.Scripting.Functions.UIFns.SetUILine1Text(SWEndor.Scenarios.Scripting.Expressions.Context,Primrose.Expressions.Val[])">
            <summary>
            Sets the text of line 1 of the scenario UI
            </summary>
            <param name="context">The game context</param>
            <param name="ps">
              Parameters: 
                STRING text
            </param>
            <returns>NULL</returns>
        </member>
        <member name="M:SWEndor.Scenarios.Scripting.Functions.UIFns.SetUILine2Text(SWEndor.Scenarios.Scripting.Expressions.Context,Primrose.Expressions.Val[])">
            <summary>
            Sets the text of line 2 of the scenario UI
            </summary>
            <param name="context">The game context</param>
            <param name="ps">
              Parameters: 
                STRING text
            </param>
            <returns>NULL</returns>
        </member>
        <member name="M:SWEndor.Scenarios.Scripting.Functions.UIFns.SetUILine3Text(SWEndor.Scenarios.Scripting.Expressions.Context,Primrose.Expressions.Val[])">
            <summary>
            Sets the text of line 3 of the scenario UI
            </summary>
            <param name="context">The game context</param>
            <param name="ps">
              Parameters: 
                STRING text
            </param>
            <returns>NULL</returns>
        </member>
        <member name="M:SWEndor.Scenarios.Scripting.Functions.MessagingFns.MessageText(SWEndor.Scenarios.Scripting.Expressions.Context,Primrose.Expressions.Val[])">
            <summary>
            Prints a message text on the center of the screen
            </summary>
            <param name="context">The game context</param>
            <param name="ps">
              Parameters: 
                STRING text, 
                INT expiretime, 
                FLOAT3 color,
                optional INT priority
            </param>
            <returns>NULL</returns>
        </member>
        <member name="M:SWEndor.Scenarios.Scripting.Functions.ActorFns.Squadron_Spawn(SWEndor.Scenarios.Scripting.Expressions.Context,Primrose.Expressions.Val[])">
            <summary>
            Spawns a group of actors and assigns them to a single squadron
            </summary>
            <param name="context">The game context</param>
            <param name="ps">
              Parameters: 
                0 STRING actor_type, 
                1 STRING squad_name, 
                2 STRING faction,
                3 INT squad_count,
                4 FLOAT spawn_time,
                5 BOOL hyperspaceIn,
                6 FLOAT3 position,
                7 FLOAT3 rotation,
                8 STRING squad_formation,
                9 FLOAT formation_distance,
                10 FLOAT wait_delay,  // ai
                11 STRING targetType, // ai
                12+ param STRING[] registries // TO-DO: Remove, replace registries
            </param>
            <returns>INT[] containing the IDs of the spawned actors</returns>
        </member>
        <member name="M:SWEndor.Scenarios.Scripting.Functions.ActorFns.Spawn(SWEndor.Scenarios.Scripting.Expressions.Context,Primrose.Expressions.Val[])">
            <summary>
            Spawns an actor
            </summary>
            <param name="context">The game context</param>
            <param name="ps">
              Parameters: 
                0 STRING actor_type, 
                1 STRING actor_name,
                2 STRING faction,
                3 STRING sidebar_name,
                4 FLOAT spawntime,
                5 FLOAT3 position, 
                6 FLOAT3 rotation, 
                7+ param STRING[] registries // TO-DO: Remove, replace registries
            </param>
            <returns>INT: the ID of the spawned actor. If the spawn failed, returns -1</returns>
        </member>
        <member name="M:SWEndor.Scenarios.Scripting.Functions.SceneFns.SetMood(SWEndor.Scenarios.Scripting.Expressions.Context,Primrose.Expressions.Val[])">
            <summary>
            Triggers the audio Mood
            </summary>
            <param name="context">The game context</param>
            <param name="ps">
              Parameters: 
                INT mood
            </param>
            <returns>NULL</returns>
        </member>
        <member name="M:SWEndor.Scenarios.Scripting.Functions.SceneFns.SetMaxBounds(SWEndor.Scenarios.Scripting.Expressions.Context,Primrose.Expressions.Val[])">
            <summary>
            Max the maximum scene boundaries for the player
            </summary>
            <param name="context">The game context</param>
            <param name="ps">
              Parameters: 
                FLOAT3 bounds
            </param>
            <returns>NULL</returns>
        </member>
        <member name="M:SWEndor.Scenarios.Scripting.Functions.SceneFns.SetMinBounds(SWEndor.Scenarios.Scripting.Expressions.Context,Primrose.Expressions.Val[])">
            <summary>
            Max the minimum scene boundaries for the player
            </summary>
            <param name="context">The game context</param>
            <param name="ps">
              Parameters: 
                FLOAT3 bounds
            </param>
            <returns>NULL</returns>    
        </member>
        <member name="M:SWEndor.Scenarios.Scripting.Functions.SceneFns.SetMaxAIBounds(SWEndor.Scenarios.Scripting.Expressions.Context,Primrose.Expressions.Val[])">
            <summary>
            Max the maximum scene boundaries for the AI
            </summary>
            <param name="context">The game context</param>
            <param name="ps">
              Parameters: 
                FLOAT3 bounds
            </param>
            <returns>NULL</returns>
        </member>
        <member name="M:SWEndor.Scenarios.Scripting.Functions.SceneFns.SetMinAIBounds(SWEndor.Scenarios.Scripting.Expressions.Context,Primrose.Expressions.Val[])">
            <summary>
            Max the minimum scene boundaries for the AI
            </summary>
            <param name="context">The game context</param>
            <param name="ps">
              Parameters: 
                FLOAT3 bounds
            </param>
            <returns>NULL</returns>
        </member>
        <member name="M:SWEndor.Scenarios.Scripting.Functions.SceneFns.EnableInformLostWing(SWEndor.Scenarios.Scripting.Expressions.Context,Primrose.Expressions.Val[])">
            <summary>
            Enables/disables lost fighter notifications
            </summary>
            <param name="context">The game context</param>
            <param name="ps">
              Parameters: 
                NONE
            </param>
            <returns>NULL</returns>
        </member>
        <member name="M:SWEndor.Scenarios.Scripting.Functions.SceneFns.EnableInformLostShip(SWEndor.Scenarios.Scripting.Expressions.Context,Primrose.Expressions.Val[])">
            <summary>
            Enables/disables lost ship notifications
            </summary>
            <param name="context">The game context</param>
            <param name="ps">
              Parameters: 
                NONE
            </param>
            <returns>NULL</returns>
        </member>
        <member name="M:SWEndor.Scenarios.Scripting.Functions.SceneFns.EnableInformLostStructure(SWEndor.Scenarios.Scripting.Expressions.Context,Primrose.Expressions.Val[])">
            <summary>
            Enables/disables lost structure notifications
            </summary>
            <param name="context">The game context</param>
            <param name="ps">
              Parameters: 
                NONE
            </param>
            <returns>NULL</returns>
        </member>
        <member name="M:SWEndor.Scenarios.Scripting.Functions.SceneFns.FadeOut(SWEndor.Scenarios.Scripting.Expressions.Context,Primrose.Expressions.Val[])">
            <summary>
            Begin screen fade out.
            </summary>
            <param name="context">The game context</param>
            <param name="ps">
              Parameters: 
                NONE
            </param>
            <returns>NULL</returns>
        </member>
        <member name="F:SWEndor.UI.Forms.BackgroundForm.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:SWEndor.UI.Forms.BackgroundForm.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:SWEndor.UI.Forms.BackgroundForm.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:SWEndor.UI.Forms.StatForm.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:SWEndor.UI.Forms.StatForm.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:SWEndor.UI.Forms.StatForm.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:SWEndor.UI.Forms.UIControls.ucPoolCache.components">
            <summary> 
            Required designer variable.
            </summary>
        </member>
        <member name="M:SWEndor.UI.Forms.UIControls.ucPoolCache.Dispose(System.Boolean)">
            <summary> 
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:SWEndor.UI.Forms.UIControls.ucPoolCache.InitializeComponent">
            <summary> 
            Required method for Designer support - do not modify 
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:SWEndor.UI.Forms.UIControls.ucSound.components">
            <summary> 
            Required designer variable.
            </summary>
        </member>
        <member name="M:SWEndor.UI.Forms.UIControls.ucSound.Dispose(System.Boolean)">
            <summary> 
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:SWEndor.UI.Forms.UIControls.ucSound.InitializeComponent">
            <summary> 
            Required method for Designer support - do not modify 
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:SWEndor.UI.Forms.UIControls.ucStatObjects.components">
            <summary> 
            Required designer variable.
            </summary>
        </member>
        <member name="M:SWEndor.UI.Forms.UIControls.ucStatObjects.Dispose(System.Boolean)">
            <summary> 
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:SWEndor.UI.Forms.UIControls.ucStatObjects.InitializeComponent">
            <summary> 
            Required method for Designer support - do not modify 
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:SWEndor.UI.Forms.GameForm.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:SWEndor.UI.Forms.GameForm.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:SWEndor.UI.Forms.GameForm.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="M:SWEndor.Program.Main">
            <summary>
            The main entry point for the application.
            </summary>
        </member>
        <member name="T:SWEndor.Properties.Resources">
            <summary>
              A strongly-typed resource class, for looking up localized strings, etc.
            </summary>
        </member>
        <member name="P:SWEndor.Properties.Resources.ResourceManager">
            <summary>
              Returns the cached ResourceManager instance used by this class.
            </summary>
        </member>
        <member name="P:SWEndor.Properties.Resources.Culture">
            <summary>
              Overrides the current thread's CurrentUICulture property for all
              resource lookups using this strongly typed resource class.
            </summary>
        </member>
    </members>
</doc>
