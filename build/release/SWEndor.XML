<?xml version="1.0"?>
<doc>
    <assembly>
        <name>SWEndor</name>
    </assembly>
    <members>
        <member name="M:SWEndor.Actors.ActorInfo.AddChild(SWEndor.Actors.ActorInfo)">
            <summary>
            Adds a child to this object
            </summary>
            <param name="a">The child object</param>
        </member>
        <member name="M:SWEndor.Actors.ActorInfo.RemoveChild(SWEndor.Actors.ActorInfo)">
            <summary>
            Removes a child from this object
            </summary>
            <param name="a">The child object</param>
        </member>
        <member name="P:SWEndor.Actors.ActorInfo.Parent">
            <summary>The parent of this object</summary>
        </member>
        <member name="P:SWEndor.Actors.ActorInfo.TopParent">
            <summary>The top-level parent of this object</summary>
        </member>
        <member name="P:SWEndor.Actors.ActorInfo.ParentForCoords">
            <summary>The parent of this object when considering coordinate positions</summary>
        </member>
        <member name="P:SWEndor.Actors.ActorInfo.UseParentCoords">
            <summary>Whether the global position of this object is relative to its parent</summary>
        </member>
        <member name="M:SWEndor.Actors.ActorInfo.TickExplosions">
            <summary>Processes the explosions once</summary>
        </member>
        <member name="P:SWEndor.Actors.ActorInfo.Mask">
            <summary>The component present in this instance</summary>
        </member>
        <member name="P:SWEndor.Actors.ActorInfo.CreationTime">
            <summary>The in-game time when the object was created or rebuilt</summary>
        </member>
        <member name="P:SWEndor.Actors.ActorInfo.CreationState">
            <summary>The creation state of this instance</summary>
        </member>
        <member name="P:SWEndor.Actors.ActorInfo.Planned">
            <summary>Returns whether the creation state is PLANNED</summary>
        </member>
        <member name="P:SWEndor.Actors.ActorInfo.Generated">
            <summary>Returns whether the creation state is GENERATED</summary>
        </member>
        <member name="P:SWEndor.Actors.ActorInfo.Active">
            <summary>Returns whether the creation state is ACTIVE</summary>
        </member>
        <member name="P:SWEndor.Actors.ActorInfo.MarkedDisposing">
            <summary>Returns whether the instance has been marked for disposal</summary>
        </member>
        <member name="P:SWEndor.Actors.ActorInfo.Disposing">
            <summary>Returns whether the creation state is DISPOSING</summary>
        </member>
        <member name="P:SWEndor.Actors.ActorInfo.DisposingOrDisposed">
            <summary>Returns whether the creation state is DISPOSING or already DISPOSED</summary>
        </member>
        <member name="P:SWEndor.Actors.ActorInfo.Disposed">
            <summary>Returns whether the creation state is DISPOSED</summary>
        </member>
        <member name="M:SWEndor.Actors.ActorInfo.SetGenerated">
            <summary>Sets the creation state to GENERATED</summary>
        </member>
        <member name="M:SWEndor.Actors.ActorInfo.SetActivated">
            <summary>Sets the creation state to ACTIVE</summary>
        </member>
        <member name="M:SWEndor.Actors.ActorInfo.SetPreDispose">
            <summary>Sets the creation state to PREDISPOSE</summary>
        </member>
        <member name="M:SWEndor.Actors.ActorInfo.SetDisposing">
            <summary>Sets the creation state to DISPOSING</summary>
        </member>
        <member name="M:SWEndor.Actors.ActorInfo.SetDisposed">
            <summary>Sets the creation state to DISPOSED</summary>
        </member>
        <member name="M:SWEndor.Actors.ActorInfo.ResetPlanned">
            <summary>Sets the creation state to PLANNED</summary>
        </member>
        <member name="P:SWEndor.Actors.ActorInfo.ActorState">
            <summary>Returns the actor state of this instance</summary>
        </member>
        <member name="P:SWEndor.Actors.ActorInfo.IsDying">
            <summary>Returns whether the actor state is DYING</summary>
        </member>
        <member name="P:SWEndor.Actors.ActorInfo.IsDead">
            <summary>Returns whether the actor state is DEAD</summary>
        </member>
        <member name="P:SWEndor.Actors.ActorInfo.IsDyingOrDead">
            <summary>Returns whether the actor state is DYING or DEAD</summary>
        </member>
        <member name="M:SWEndor.Actors.ActorInfo.AdvanceDeathOneLevel">
            <summary>Advances the actor state one step towards the DEAD state</summary>
        </member>
        <member name="M:SWEndor.Actors.ActorInfo.SetState_Dead">
            <summary>Sets the actor state to DEAD</summary>
        </member>
        <member name="M:SWEndor.Actors.ActorInfo.SetState_Dying">
            <summary>Sets the actor state to DYING</summary>
        </member>
        <member name="M:SWEndor.Actors.ActorInfo.SetState_Normal">
            <summary>Sets the actor state to NORMAL</summary>
        </member>
        <member name="P:SWEndor.Actors.ActorInfo.Position">
            <summary>The local position of the object</summary>
        </member>
        <member name="P:SWEndor.Actors.ActorInfo.PrevPosition">
            <summary>The previous local position of the object</summary>
        </member>
        <member name="P:SWEndor.Actors.ActorInfo.Rotation">
            <summary>The local rotation of the object</summary>
        </member>
        <member name="P:SWEndor.Actors.ActorInfo.PrevRotation">
            <summary>The previous local rotation of the object</summary>
        </member>
        <member name="P:SWEndor.Actors.ActorInfo.Direction">
            <summary>The local direction of the object</summary>
        </member>
        <member name="P:SWEndor.Actors.ActorInfo.Scale">
            <summary>The scale of the object</summary>
        </member>
        <member name="M:SWEndor.Actors.ActorInfo.GetWorldMatrix">
            <summary>Gets the world transformation matrix of the object</summary>
        </member>
        <member name="M:SWEndor.Actors.ActorInfo.GetPrevWorldMatrix">
            <summary>Gets the previous world transformation matrix of the object</summary>
        </member>
        <member name="M:SWEndor.Actors.ActorInfo.GetGlobalPosition">
            <summary>Extracts the world position from the object's transformation matrix</summary>
        </member>
        <member name="M:SWEndor.Actors.ActorInfo.GetPrevGlobalPosition">
            <summary>Extracts the previous world position from the object's transformation matrix</summary>
        </member>
        <member name="M:SWEndor.Actors.ActorInfo.GetGlobalRotation">
            <summary>Extracts the world rotation from the object's transformation matrix</summary>
        </member>
        <member name="M:SWEndor.Actors.ActorInfo.GetGlobalDirection">
            <summary>Extracts the world direction from the object's transformation matrix</summary>
        </member>
        <member name="M:SWEndor.Actors.ActorInfo.GetRelativePositionFUR(System.Single,System.Single,System.Single,System.Boolean)">
            <summary>Gets the relative offset from an object</summary>
        </member>
        <member name="M:SWEndor.Actors.ActorInfo.GetRelativePositionXYZ(System.Single,System.Single,System.Single,System.Boolean)">
            <summary>Gets the relative offset from an object</summary>
        </member>
        <member name="M:SWEndor.Actors.ActorInfo.MoveRelative(System.Single,System.Single,System.Single)">
            <summary>Moves the object by the relative offset</summary>
        </member>
        <member name="M:SWEndor.Actors.ActorInfo.MoveAbsolute(System.Single,System.Single,System.Single)">
            <summary>Moves the object by world coordinate offset</summary>
        </member>
        <member name="M:SWEndor.Actors.ActorInfo.Rotate(System.Single,System.Single,System.Single)">
            <summary>Rotates the object</summary>
        </member>
        <member name="M:SWEndor.Actors.ActorInfo.LookAt(MTV3D65.TV_3DVECTOR)">
            <summary>Rotates the object to look at an object, eliminating its Z-rotation in the process</summary>
        </member>
        <member name="M:SWEndor.Actors.ActorInfo.IsOutOfBounds(MTV3D65.TV_3DVECTOR,MTV3D65.TV_3DVECTOR)">
            <summary>Determines whether the object is out of bounds</summary>
        </member>
        <member name="P:SWEndor.Actors.ActorInfo.TypeInfo">
            <summary>The instance type of this instance</summary>
        </member>
        <member name="F:SWEndor.Actors.ActorInfo.ActorFactory">
            <summary>The source factory that created this instance</summary>
        </member>
        <member name="P:SWEndor.Actors.ActorInfo.Engine">
            <summary>The game engine</summary>
        </member>
        <member name="P:SWEndor.Actors.ActorInfo.Name">
            <summary>The instance name</summary>
        </member>
        <member name="P:SWEndor.Actors.ActorInfo.SideBarName">
            <summary>The short name as displayed on the side bar</summary>
        </member>
        <member name="P:SWEndor.Actors.ActorInfo.ID">
            <summary>The instance ID</summary>
        </member>
        <member name="P:SWEndor.Actors.ActorInfo.Key">
            <summary>The instance unique identifier</summary>
        </member>
        <member name="M:SWEndor.Actors.ActorInfo.ToString">
            <summary>The instance unique string representation</summary>
        </member>
        <member name="P:SWEndor.Actors.ActorInfo.Faction">
            <summary>The faction the instance belongs to</summary>
        </member>
        <member name="P:SWEndor.Actors.ActorInfo.Squad">
            <summary>The squad the instance belongs to</summary>
        </member>
        <member name="P:SWEndor.Actors.ActorInfo.Prev">
            <summary>The previous linked instance</summary>
        </member>
        <member name="P:SWEndor.Actors.ActorInfo.Next">
            <summary>The next linked instance</summary>
        </member>
        <member name="P:SWEndor.Actors.ActorInfo.Scope">
            <summary>A scope counter determining whether the object is still in scope or safe to dispose</summary>
        </member>
        <member name="M:SWEndor.Actors.ActorInfo.Rebuild(SWEndor.Core.Engine,System.Int16,SWEndor.ActorTypes.ActorCreationInfo)">
            <summary>
            Rebuilds the instance
            </summary>
            <param name="engine">The game engine</param>
            <param name="id">The new ID</param>
            <param name="acinfo">The instance creation data</param>
        </member>
        <member name="M:SWEndor.Actors.ActorInfo.Initialize(SWEndor.Core.Engine)">
            <summary>
            Initializes the game object instance
            </summary>
            <param name="engine">The game engine</param>
        </member>
        <member name="P:SWEndor.Actors.ActorInfo.IsPlayer">
            <summary>Checks if the object is the player</summary>
        </member>
        <member name="M:SWEndor.Actors.ActorInfo.SetPlayer">
            <summary>Sets the object as the player</summary>
        </member>
        <member name="P:SWEndor.Actors.ActorInfo.IsScenePlayer">
            <summary>Checks if the object is the player or the designated camera target</summary>
        </member>
        <member name="M:SWEndor.Actors.ActorInfo.IsAlliedWith(SWEndor.FactionInfo)">
            <summary>Checks if the object is allied with a faction</summary>
        </member>
        <member name="M:SWEndor.Actors.ActorInfo.IsAlliedWith(SWEndor.Actors.ActorInfo)">
            <summary>Checks if the object is allied with another object</summary>
        </member>
        <member name="M:SWEndor.Actors.ActorInfo.Delete">
            <summary>Mark the object for disposal</summary>
        </member>
        <member name="M:SWEndor.Actors.ActorInfo.CreateNewSquad">
            <summary>Creates a new squad with the object as its first member</summary>
        </member>
        <member name="M:SWEndor.Actors.ActorInfo.JoinSquad(SWEndor.Actors.ActorInfo)">
            <summary>Joins another squad</summary>
        </member>
        <member name="M:SWEndor.Actors.ActorInfo.JoinSquad(System.String)">
            <summary>Joins another squad</summary>
        </member>
        <member name="M:SWEndor.Actors.ActorInfo.MakeSquadLeader">
            <summary>Makes this object the squad leader</summary>
        </member>
        <member name="M:SWEndor.Actors.ActorInfo.Destroy">
            <summary>Disposes the object</summary>
        </member>
        <member name="M:SWEndor.Actors.ActorInfo.Tick(SWEndor.Core.Engine,System.Single)">
            <summary>
            Processes the object for one game tick
            </summary>
            <param name="engine">The game engine</param>
            <param name="time">The game time</param>
        </member>
        <member name="T:SWEndor.Actors.Models.SystemPart">
            <summary>
            Defines subsystem parts
            </summary>
        </member>
        <member name="F:SWEndor.Actors.Models.SystemPart.ENGINE">
            <summary>Allows speed changes</summary>
        </member>
        <member name="F:SWEndor.Actors.Models.SystemPart.SIDE_THRUSTERS">
            <summary>Allows steering</summary>
        </member>
        <member name="F:SWEndor.Actors.Models.SystemPart.SHIELD_GENERATOR">
            <summary>Allows regeneration of shields</summary>
        </member>
        <member name="F:SWEndor.Actors.Models.SystemPart.RADAR">
            <summary>Reveals the in-game map and radar</summary>
        </member>
        <member name="F:SWEndor.Actors.Models.SystemPart.SCANNER">
            <summary>Reveals information about the target</summary>
        </member>
        <member name="F:SWEndor.Actors.Models.SystemPart.TARGETING_SYSTEM">
            <summary>Allows targeting, required for guided projectiles</summary>
        </member>
        <member name="F:SWEndor.Actors.Models.SystemPart.COMLINK">
            <summary>Allows communication with squad and mission</summary>
        </member>
        <member name="F:SWEndor.Actors.Models.SystemPart.ENERGY_STORE">
            <summary>Allows accumulation of energy</summary>
        </member>
        <member name="F:SWEndor.Actors.Models.SystemPart.ENERGY_CHARGER">
            <summary>Converts fuel into energy</summary>
        </member>
        <member name="F:SWEndor.Actors.Models.SystemPart.LASER_WEAPONS">
            <summary>Fires laser projectiles</summary>
        </member>
        <member name="F:SWEndor.Actors.Models.SystemPart.PROJECTILE_LAUNCHERS">
            <summary>Launches ordinance projectiles</summary>
        </member>
        <member name="F:SWEndor.Actors.Models.SystemPart.HYPERDRIVE">
            <summary>Allow hyperdrive (TO-DO)</summary>
        </member>
        <member name="T:SWEndor.Actors.Models.SystemPartExt">
            <summary>
            Provides extension methods for a SystemPart
            </summary>
        </member>
        <member name="M:SWEndor.Actors.Models.SystemPartExt.GetShortName(SWEndor.Actors.Models.SystemPart)">
            <summary>
            Retrieves the short name for a system part
            </summary>
            <param name="part">The system part</param>
            <returns>The cached short name of this part</returns>
        </member>
        <member name="T:SWEndor.Actors.Models.SystemState">
            <summary>
            Defines the state of each subsystem component
            </summary>
        </member>
        <member name="F:SWEndor.Actors.Models.SystemState.ABSENT">
            <summary>The subsystem is not present</summary>
        </member>
        <member name="F:SWEndor.Actors.Models.SystemState.DESTROYED">
            <summary>The subsystem is present but destroyed</summary>
        </member>
        <member name="F:SWEndor.Actors.Models.SystemState.DISABLED">
            <summary>The subsystem is present but disabled</summary>
        </member>
        <member name="F:SWEndor.Actors.Models.SystemState.ACTIVE">
            <summary>The subsystem is present and functional</summary>
        </member>
        <member name="T:SWEndor.Actors.Models.AIData">
            <summary>
            Storage of AI states per actor, transferrable across actions
            </summary>
        </member>
        <member name="T:SWEndor.Actors.Models.ArmorModel">
            <summary>
            A light implementation of an Armor system
            </summary>
        </member>
        <member name="M:SWEndor.ActorTypes.Components.SystemData.AutoParts(SWEndor.ActorTypes.ActorTypeInfo)">
            <summary>
            Automatically generate parts. Use after other systems have been initialized.
            </summary>
            <param name="atype"></param>
        </member>
        <member name="T:SWEndor.ActorTypes.Components.RotateOnly">
            <summary>
            Implementation of Move behavior that rotates only
            </summary>
        </member>
        <member name="T:SWEndor.ActorTypes.Components.MoveForwardOnly">
            <summary>
            Implementation of Move behavior that moves forward only
            </summary>
        </member>
        <member name="T:SWEndor.ActorTypes.Components.MoveLaser">
            <summary>
            Implementation of Move behavior that moves forward at laser speed
            </summary>
        </member>
        <member name="T:SWEndor.ActorTypes.Components.NoMove">
            <summary>
            Implementation of Move behavior that does not move
            </summary>
        </member>
        <member name="T:SWEndor.ActorTypes.Components.MoveNormal">
            <summary>
            Implementation of Move behavior with full range of movement
            </summary>
        </member>
        <member name="T:SWEndor.ActorTypes.Components.ArmorData">
            <summary>
            A light implementation of an Armor system, replaces old Damage and CollisionDamage coefficients
            </summary>
        </member>
        <member name="M:SWEndor.Core.Session.IsLowFPS">
            <summary>
            Checks if the current FPS is below the LowFPSLimit
            </summary>
            <returns></returns>
        </member>
        <member name="P:SWEndor.Core.Session.PerfCullModifier">
            <summary>
            Determines the modifiers to render culling distance to increase performance
            </summary>
        </member>
        <member name="T:SWEndor.Models.IActorState">
            <summary>
            Represents an object that supports an actor state
            </summary>
        </member>
        <member name="T:SWEndor.Models.ITransformable">
            <summary>
            Represents a transformable object
            </summary>
        </member>
        <member name="P:SWEndor.Models.ITransformable.Position">
            <summary>The local position of the object</summary>
        </member>
        <member name="M:SWEndor.Models.ITransformable.GetWorldMatrix">
            <summary>Gets the world transformation matrix of the object</summary>
        </member>
        <member name="M:SWEndor.Models.ITransformable.GetPrevWorldMatrix">
            <summary>Gets the previous world transformation matrix of the object</summary>
        </member>
        <member name="M:SWEndor.Models.ITransformable.GetGlobalPosition">
            <summary>Extracts the world position from the object's transformation matrix</summary>
        </member>
        <member name="M:SWEndor.Models.ITransformable.GetPrevGlobalPosition">
            <summary>Extracts the previous world position from the object's transformation matrix</summary>
        </member>
        <member name="M:SWEndor.Models.ITransformable.GetRelativePositionXYZ(System.Single,System.Single,System.Single,System.Boolean)">
            <summary>Gets the relative offset from an object</summary>
        </member>
        <member name="T:SWEndor.Models.IParent`1">
            <summary>
            Represents an object supporting a parent object
            </summary>
            <typeparam name="T"></typeparam>
        </member>
        <member name="P:SWEndor.Models.IParent`1.ParentForCoords">
            <summary>The parent of this object when considering coordinate positions</summary>
        </member>
        <member name="T:SWEndor.Models.INotify">
            <summary>
            Represents an object that notifies state changes
            </summary>
        </member>
        <member name="T:SWEndor.Models.IDyingTime">
            <summary>
            Represents a object supporting a dying timer
            </summary>
        </member>
        <member name="T:SWEndor.Models.IMeshObject">
            <summary>
            Represents a mesh object
            </summary>
        </member>
        <member name="T:SWEndor.Models.ICreationInfo`2">
            <summary>
            Represents an in-game creation data type
            </summary>
        </member>
        <member name="P:SWEndor.Models.ICreationInfo`2.TypeInfo">
            <summary>The instance type of this instance</summary>
        </member>
        <member name="T:SWEndor.Models.ILinked`1">
            <summary>
            Represents an in-game linked object. Used by the owning factory classes
            </summary>
        </member>
        <member name="P:SWEndor.Models.ILinked`1.Prev">
            <summary>The previous linked instance</summary>
        </member>
        <member name="P:SWEndor.Models.ILinked`1.Next">
            <summary>The next linked instance</summary>
        </member>
        <member name="T:SWEndor.Models.IActorDisposable">
            <summary>
            Represents an in-game disposable object
            </summary>
        </member>
        <member name="P:SWEndor.Models.IActorDisposable.DisposingOrDisposed">
            <summary>Returns whether the creation state is DISPOSING or already DISPOSED</summary>
        </member>
        <member name="P:SWEndor.Models.IActorDisposable.Disposed">
            <summary>Returns whether the creation state is DISPOSED</summary>
        </member>
        <member name="M:SWEndor.Models.IActorDisposable.Destroy">
            <summary>Disposes the object</summary>
        </member>
        <member name="M:SWEndor.Models.IActorDisposable.Delete">
            <summary>Mark the object for disposal</summary>
        </member>
        <member name="T:SWEndor.Models.IEngineObject">
            <summary>
            Represents a Engine supported object
            </summary>
        </member>
        <member name="P:SWEndor.Models.IEngineObject.Engine">
            <summary>The game engine</summary>
        </member>
        <member name="T:SWEndor.Models.IActorCreateable`1">
            <summary>
            Represents a created instance object
            </summary>
            <typeparam name="TCreate">The creator data type</typeparam>
        </member>
        <member name="P:SWEndor.Models.IActorCreateable`1.CreationTime">
            <summary>The in-game time when the object was created or rebuilt</summary>
        </member>
        <member name="M:SWEndor.Models.IActorCreateable`1.Rebuild(SWEndor.Core.Engine,System.Int16,`0)">
            <summary>
            Rebuilds the instance
            </summary>
            <param name="engine">The game engine</param>
            <param name="id">The new ID</param>
            <param name="acinfo">The instance creation data</param>
        </member>
        <member name="M:SWEndor.Models.IActorCreateable`1.Initialize(SWEndor.Core.Engine)">
            <summary>
            Initializes the game object instance
            </summary>
            <param name="engine">The game engine</param>
        </member>
        <member name="T:SWEndor.Models.IScoped">
            <summary>
            Represents an in-game scoped object
            </summary>
        </member>
        <member name="P:SWEndor.Models.IScoped.Scope">
            <summary>A scope counter determining whether the object is still in scope or safe to dispose</summary>
        </member>
        <member name="T:SWEndor.Models.ITyped`1">
            <summary>
            Represents an in-game typed object
            </summary>
        </member>
        <member name="P:SWEndor.Models.ITyped`1.TypeInfo">
            <summary>The instance type of this instance</summary>
        </member>
        <member name="T:SWEndor.Models.ITypeInfo`1">
            <summary>
            Represents an in-game object type
            </summary>
        </member>
        <member name="T:SWEndor.Models.ICollidable">
            <summary>
            Represents a collidable object
            </summary>
        </member>
        <member name="T:SWEndor.Models.ActorState">
            <summary>
            Describe the state of an Actor as a game object
            </summary>
        </member>
        <member name="F:SWEndor.Models.ActorState.NORMAL">
            <summary>
            Actor is executing normal game functions
            </summary>
        </member>
        <member name="F:SWEndor.Models.ActorState.DYING">
            <summary>
            Actor is dying, and will be dead soon
            </summary>
        </member>
        <member name="F:SWEndor.Models.ActorState.DEAD">
            <summary>
            Actor is dead and will be ripe for disposal
            </summary>
        </member>
        <member name="T:SWEndor.Models.CreationState">
            <summary>
            Describe the state of an Actor as handled by its Factory.
            </summary>
        </member>
        <member name="F:SWEndor.Models.CreationState.PLANNED">
            <summary>
            Actor is not yet generated.
            </summary>
        </member>
        <member name="F:SWEndor.Models.CreationState.GENERATED">
            <summary>
            Actor is generated, but is not yet eligible for game operations 
            </summary>
        </member>
        <member name="F:SWEndor.Models.CreationState.ACTIVE">
            <summary>
            Actor is in a valid state for running game operations.
            </summary>
        </member>
        <member name="F:SWEndor.Models.CreationState.PREDISPOSE">
            <summary>
            Actor is marked for clean-up
            </summary>
        </member>
        <member name="F:SWEndor.Models.CreationState.DISPOSING">
            <summary>
            Actor is destroyed and awaits clean-up
            </summary>
        </member>
        <member name="F:SWEndor.Models.CreationState.DISPOSED">
            <summary>
            Actor is destroyed and awaits clean-up / reuse
            </summary>
        </member>
        <member name="T:SWEndor.Models.DistanceModel">
            <summary>
            Provides implementation for calculating distances and caching the result
            </summary>
        </member>
        <member name="M:SWEndor.Models.DistanceModel.Reset">
            <summary>Marks the cache to allow clearing</summary>
        </member>
        <member name="P:SWEndor.Models.DistanceModel.CacheCount">
            <summary>Returns the number of cached results</summary>
        </member>
        <member name="M:SWEndor.Models.DistanceModel.GetRoughDistance(MTV3D65.TV_3DVECTOR,MTV3D65.TV_3DVECTOR)">
            <summary>
            Gets a higher bound on the distance between Actors by taking the Manhattan distance.
            </summary>
            <returns></returns>
        </member>
        <member name="M:SWEndor.Models.DistanceModel.GetRoughDistance(SWEndor.Models.ITransformable,SWEndor.Models.ITransformable)">
            <summary>
            Gets a higher bound on the distance between Actors by taking the Manhattan distance. This result is not cached.
            </summary>
            <param name="a1">The first object</param>
            <param name="a2">The second object</param>
            <returns>The Manhattan distance between the two objects</returns>
        </member>
        <member name="M:SWEndor.Models.DistanceModel.GetDistance``2(SWEndor.Core.Engine,``0,``1,System.Single)">
            <summary>
            Gets the distance between two objects, up to a limit. Returns the distance or limit
            </summary>
            <typeparam name="T1">The type of the first transformable</typeparam>
            <typeparam name="T2">The type of the second transformable</typeparam>
            <param name="e">The game engine</param>
            <param name="a1">The first object</param>
            <param name="a2">The second object</param>
            <param name="limit">The maximum returned value</param>
            <returns>The distance between two objects, or limit if the distance exceeds the limit</returns>
        </member>
        <member name="M:SWEndor.Models.DistanceModel.GetDistance``2(SWEndor.Core.Engine,``0,``1)">
            <summary>
            Gets the distance between two objects, up to a limit. Returns the distance or limit
            </summary>
            <typeparam name="T1">The type of the first transformable</typeparam>
            <typeparam name="T2">The type of the second transformable</typeparam>
            <param name="e">The game engine</param>
            <param name="a1">The first object</param>
            <param name="a2">The second object</param>
            <returns>The distance between two objects</returns>
        </member>
        <member name="M:SWEndor.Models.DistanceModel.GetDistance(MTV3D65.TV_3DVECTOR,MTV3D65.TV_3DVECTOR)">
            <summary>
            Gets the distance between two points
            </summary>
            <returns></returns>
        </member>
        <member name="M:SWEndor.Models.DistanceModel.Lerp(SWEndor.Core.Engine,MTV3D65.TV_3DVECTOR,MTV3D65.TV_3DVECTOR,System.Single)">
            <summary>
            Returns a linear interpolated position between two points
            </summary>
            <param name="e">The game engine</param>
            <param name="first">The first point</param>
            <param name="second">The first point</param>
            <param name="frac">The fractional position between the two points.</param>
            <returns></returns>
        </member>
        <member name="T:SWEndor.Models.RadarType">
            <summary>
            The 'type' of an Actor for drawing on the radar
            </summary>
        </member>
        <member name="F:SWEndor.Models.RadarType.NULL">
            <summary>
            Draw nothing
            </summary>
        </member>
        <member name="F:SWEndor.Models.RadarType.TRAILLINE">
            <summary>
            Draw a trail line from previous position to current position
            </summary>
        </member>
        <member name="F:SWEndor.Models.RadarType.HOLLOW_SQUARE">
            <summary>
            Draw an unfilled square
            </summary>
        </member>
        <member name="F:SWEndor.Models.RadarType.FILLED_SQUARE">
            <summary>
            Draw an filled square
            </summary>
        </member>
        <member name="F:SWEndor.Models.RadarType.HOLLOW_CIRCLE_S">
            <summary>
            Draw an hollow circle, using 4 points
            </summary>
        </member>
        <member name="F:SWEndor.Models.RadarType.HOLLOW_CIRCLE_M">
            <summary>
            Draw an hollow circle, using 12 points
            </summary>
        </member>
        <member name="F:SWEndor.Models.RadarType.HOLLOW_CIRCLE_L">
            <summary>
            Draw an hollow circle, using 36 points
            </summary>
        </member>
        <member name="F:SWEndor.Models.RadarType.FILLED_CIRCLE_S">
            <summary>
            Draw an filled circle, using 4 points
            </summary>
        </member>
        <member name="F:SWEndor.Models.RadarType.FILLED_CIRCLE_M">
            <summary>
            Draw an filled circle, using 12 points
            </summary>
        </member>
        <member name="F:SWEndor.Models.RadarType.FILLED_CIRCLE_L">
            <summary>
            Draw an filled circle, using 36 points
            </summary>
        </member>
        <member name="F:SWEndor.Models.RadarType.RECTANGLE_GIANT">
            <summary>
            Draw a large rectangle that obeys xz-rotation (capital ships)
            </summary>
        </member>
        <member name="F:SWEndor.Models.RadarType.TRIANGLE_GIANT">
            <summary>
            Draw a large triangle that obeys xz-rotation (capital ships - star destroyers)
            </summary>
        </member>
        <member name="T:SWEndor.Models.TargetType">
            <summary>
            The 'type' of an Actor for targeting purposes
            </summary>
        </member>
        <member name="F:SWEndor.Models.TargetType.LASER">
            <summary>
            Actor is a laser
            </summary>
        </member>
        <member name="F:SWEndor.Models.TargetType.MUNITION">
            <summary>
            Actor is a munition
            </summary>
        </member>
        <member name="F:SWEndor.Models.TargetType.FLOATING">
            <summary>
            Actor is a non-combat object
            </summary>
        </member>
        <member name="F:SWEndor.Models.TargetType.FIGHTER">
            <summary>
            Actor is a fighter
            </summary>
        </member>
        <member name="F:SWEndor.Models.TargetType.SHIP">
            <summary>
            Actor is a large vessel
            </summary>
        </member>
        <member name="F:SWEndor.Models.TargetType.STRUCTURE">
            <summary>
            Actor is a 'structure' (think towers)
            </summary>
        </member>
        <member name="F:SWEndor.Models.TargetType.ADDON">
            <summary>
            Actor is a dedicated add-on to another actor
            </summary>
        </member>
        <member name="F:SWEndor.Models.TargetType.SHIELDGENERATOR">
            <summary>
            Actor is a shield generator (special add on)
            </summary>
        </member>
        <member name="F:SWEndor.Models.TargetType.ANY">
            <summary>
            Actor is considered a member of all targetable types.
            </summary>
        </member>
        <member name="T:SWEndor.SpawnerInfoDecorator">
            <summary>
            Static place-holder for data
            </summary>
        </member>
        <member name="M:SWEndor.Player.PlayerCameraInfo.SetPlayerLook">
            <summary>
            Sets the view camera to use the player actor view
            </summary>
        </member>
        <member name="M:SWEndor.Player.PlayerCameraInfo.SetDeathLook">
            <summary>
            Sets the view camera to use the player death view
            </summary>
        </member>
        <member name="M:SWEndor.Player.PlayerCameraInfo.SetSceneLook">
            <summary>
            Sets the view camera to use the scene (no actor) view
            </summary>
        </member>
        <member name="P:SWEndor.Player.PlayerCameraInfo.Position">
            <summary>
            The view camera position
            </summary>
        </member>
        <member name="P:SWEndor.Player.PlayerCameraInfo.Rotation">
            <summary>
            The view camera rotation
            </summary>
        </member>
        <member name="M:SWEndor.Projectiles.ProjectileInfo.TickExplosions">
            <summary>Processes the explosions once</summary>
        </member>
        <member name="P:SWEndor.Projectiles.ProjectileInfo.Mask">
            <summary>The component present in this instance</summary>
        </member>
        <member name="P:SWEndor.Projectiles.ProjectileInfo.CreationTime">
            <summary>The in-game time when the object was created or rebuilt</summary>
        </member>
        <member name="P:SWEndor.Projectiles.ProjectileInfo.CreationState">
            <summary>The creation state of this instance</summary>
        </member>
        <member name="P:SWEndor.Projectiles.ProjectileInfo.Planned">
            <summary>Returns whether the creation state is PLANNED</summary>
        </member>
        <member name="P:SWEndor.Projectiles.ProjectileInfo.Generated">
            <summary>Returns whether the creation state is GENERATED</summary>
        </member>
        <member name="P:SWEndor.Projectiles.ProjectileInfo.Active">
            <summary>Returns whether the creation state is ACTIVE</summary>
        </member>
        <member name="P:SWEndor.Projectiles.ProjectileInfo.MarkedDisposing">
            <summary>Returns whether the instance has been marked for disposal</summary>
        </member>
        <member name="P:SWEndor.Projectiles.ProjectileInfo.Disposing">
            <summary>Returns whether the creation state is DISPOSING</summary>
        </member>
        <member name="P:SWEndor.Projectiles.ProjectileInfo.DisposingOrDisposed">
            <summary>Returns whether the creation state is DISPOSING or already DISPOSED</summary>
        </member>
        <member name="P:SWEndor.Projectiles.ProjectileInfo.Disposed">
            <summary>Returns whether the creation state is DISPOSED</summary>
        </member>
        <member name="M:SWEndor.Projectiles.ProjectileInfo.SetGenerated">
            <summary>Sets the creation state to GENERATED</summary>
        </member>
        <member name="M:SWEndor.Projectiles.ProjectileInfo.SetActivated">
            <summary>Sets the creation state to ACTIVE</summary>
        </member>
        <member name="M:SWEndor.Projectiles.ProjectileInfo.SetPreDispose">
            <summary>Sets the creation state to PREDISPOSE</summary>
        </member>
        <member name="M:SWEndor.Projectiles.ProjectileInfo.SetDisposing">
            <summary>Sets the creation state to DISPOSING</summary>
        </member>
        <member name="M:SWEndor.Projectiles.ProjectileInfo.SetDisposed">
            <summary>Sets the creation state to DISPOSED</summary>
        </member>
        <member name="M:SWEndor.Projectiles.ProjectileInfo.ResetPlanned">
            <summary>Sets the creation state to PLANNED</summary>
        </member>
        <member name="P:SWEndor.Projectiles.ProjectileInfo.ActorState">
            <summary>Returns the actor state of this instance</summary>
        </member>
        <member name="P:SWEndor.Projectiles.ProjectileInfo.IsDying">
            <summary>Returns whether the actor state is DYING</summary>
        </member>
        <member name="P:SWEndor.Projectiles.ProjectileInfo.IsDead">
            <summary>Returns whether the actor state is DEAD</summary>
        </member>
        <member name="P:SWEndor.Projectiles.ProjectileInfo.IsDyingOrDead">
            <summary>Returns whether the actor state is DYING or DEAD</summary>
        </member>
        <member name="M:SWEndor.Projectiles.ProjectileInfo.AdvanceDeathOneLevel">
            <summary>Advances the actor state one step towards the DEAD state</summary>
        </member>
        <member name="M:SWEndor.Projectiles.ProjectileInfo.SetState_Dead">
            <summary>Sets the actor state to DEAD</summary>
        </member>
        <member name="M:SWEndor.Projectiles.ProjectileInfo.SetState_Dying">
            <summary>Sets the actor state to DYING</summary>
        </member>
        <member name="M:SWEndor.Projectiles.ProjectileInfo.SetState_Normal">
            <summary>Sets the actor state to NORMAL</summary>
        </member>
        <member name="P:SWEndor.Projectiles.ProjectileInfo.Position">
            <summary>The local position of the object</summary>
        </member>
        <member name="P:SWEndor.Projectiles.ProjectileInfo.PrevPosition">
            <summary>The previous local position of the object</summary>
        </member>
        <member name="P:SWEndor.Projectiles.ProjectileInfo.Rotation">
            <summary>The local rotation of the object</summary>
        </member>
        <member name="P:SWEndor.Projectiles.ProjectileInfo.PrevRotation">
            <summary>The previous local rotation of the object</summary>
        </member>
        <member name="P:SWEndor.Projectiles.ProjectileInfo.Direction">
            <summary>The local direction of the object</summary>
        </member>
        <member name="P:SWEndor.Projectiles.ProjectileInfo.Scale">
            <summary>The scale of the object</summary>
        </member>
        <member name="M:SWEndor.Projectiles.ProjectileInfo.GetWorldMatrix">
            <summary>Gets the world transformation matrix of the object</summary>
        </member>
        <member name="M:SWEndor.Projectiles.ProjectileInfo.GetPrevWorldMatrix">
            <summary>Gets the previous world transformation matrix of the object</summary>
        </member>
        <member name="M:SWEndor.Projectiles.ProjectileInfo.GetGlobalPosition">
            <summary>Extracts the world position from the object's transformation matrix</summary>
        </member>
        <member name="M:SWEndor.Projectiles.ProjectileInfo.GetPrevGlobalPosition">
            <summary>Extracts the previous world position from the object's transformation matrix</summary>
        </member>
        <member name="M:SWEndor.Projectiles.ProjectileInfo.GetGlobalRotation">
            <summary>Extracts the world rotation from the object's transformation matrix</summary>
        </member>
        <member name="M:SWEndor.Projectiles.ProjectileInfo.GetGlobalDirection">
            <summary>Extracts the world direction from the object's transformation matrix</summary>
        </member>
        <member name="M:SWEndor.Projectiles.ProjectileInfo.GetRelativePositionFUR(System.Single,System.Single,System.Single,System.Boolean)">
            <summary>Gets the relative offset from an object</summary>
        </member>
        <member name="M:SWEndor.Projectiles.ProjectileInfo.GetRelativePositionXYZ(System.Single,System.Single,System.Single,System.Boolean)">
            <summary>Gets the relative offset from an object</summary>
        </member>
        <member name="M:SWEndor.Projectiles.ProjectileInfo.MoveRelative(System.Single,System.Single,System.Single)">
            <summary>Moves the object by the relative offset</summary>
        </member>
        <member name="M:SWEndor.Projectiles.ProjectileInfo.MoveAbsolute(System.Single,System.Single,System.Single)">
            <summary>Moves the object by world coordinate offset</summary>
        </member>
        <member name="M:SWEndor.Projectiles.ProjectileInfo.Rotate(System.Single,System.Single,System.Single)">
            <summary>Rotates the object</summary>
        </member>
        <member name="M:SWEndor.Projectiles.ProjectileInfo.LookAt(MTV3D65.TV_3DVECTOR)">
            <summary>Rotates the object to look at an object, eliminating its Z-rotation in the process</summary>
        </member>
        <member name="P:SWEndor.Projectiles.ProjectileInfo.TypeInfo">
            <summary>The instance type of this instance</summary>
        </member>
        <member name="F:SWEndor.Projectiles.ProjectileInfo.ProjectileFactory">
            <summary>The source factory that created this instance</summary>
        </member>
        <member name="P:SWEndor.Projectiles.ProjectileInfo.Engine">
            <summary>The game engine</summary>
        </member>
        <member name="P:SWEndor.Projectiles.ProjectileInfo.Name">
            <summary>The instance name</summary>
        </member>
        <member name="P:SWEndor.Projectiles.ProjectileInfo.SideBarName">
            <summary>The short name as displayed on the side bar</summary>
        </member>
        <member name="P:SWEndor.Projectiles.ProjectileInfo.ID">
            <summary>The instance ID</summary>
        </member>
        <member name="P:SWEndor.Projectiles.ProjectileInfo.Key">
            <summary>The instance unique identifier</summary>
        </member>
        <member name="M:SWEndor.Projectiles.ProjectileInfo.ToString">
            <summary>The instance unique string representation</summary>
        </member>
        <member name="P:SWEndor.Projectiles.ProjectileInfo.Prev">
            <summary>The previous linked instance</summary>
        </member>
        <member name="P:SWEndor.Projectiles.ProjectileInfo.Next">
            <summary>The next linked instance</summary>
        </member>
        <member name="P:SWEndor.Projectiles.ProjectileInfo.Scope">
            <summary>A scope counter determining whether the object is still in scope or safe to dispose</summary>
        </member>
        <member name="M:SWEndor.Projectiles.ProjectileInfo.Rebuild(SWEndor.Core.Engine,System.Int16,SWEndor.ProjectileTypes.ProjectileCreationInfo)">
            <summary>
            Rebuilds the instance
            </summary>
            <param name="engine">The game engine</param>
            <param name="id">The new ID</param>
            <param name="acinfo">The instance creation data</param>
        </member>
        <member name="M:SWEndor.Projectiles.ProjectileInfo.Initialize(SWEndor.Core.Engine)">
            <summary>
            Initializes the game object instance
            </summary>
            <param name="engine">The game engine</param>
        </member>
        <member name="P:SWEndor.Projectiles.ProjectileInfo.ParentForCoords">
            <summary>The parent of this object when considering coordinate positions</summary>
        </member>
        <member name="M:SWEndor.Projectiles.ProjectileInfo.Delete">
            <summary>Mark the object for disposal</summary>
        </member>
        <member name="M:SWEndor.Projectiles.ProjectileInfo.Destroy">
            <summary>Disposes the object</summary>
        </member>
        <member name="M:SWEndor.Projectiles.ProjectileInfo.Tick(SWEndor.Core.Engine,System.Single)">
            <summary>
            Processes the object for one game tick
            </summary>
            <param name="engine">The game engine</param>
            <param name="time">The game time</param>
        </member>
        <member name="T:SWEndor.ProjectileTypes.Components.MoveForwardOnly">
            <summary>
            Implementation of Move behavior that moves forward only
            </summary>
        </member>
        <member name="T:SWEndor.ProjectileTypes.Components.MoveLaser">
            <summary>
            Implementation of Move behavior that moves forward at laser speed
            </summary>
        </member>
        <member name="T:SWEndor.ProjectileTypes.Components.MoveNormal">
            <summary>
            Implementation of Move behavior with full range of movement
            </summary>
        </member>
        <member name="T:SWEndor.ProjectileTypes.Components.NoMove">
            <summary>
            Implementation of Move behavior that does not move
            </summary>
        </member>
        <member name="T:SWEndor.ProjectileTypes.Components.RotateOnly">
            <summary>
            Implementation of Move behavior that rotates only
            </summary>
        </member>
        <member name="T:SWEndor.ProjectileTypes.ProjectileTypeInfo">
            <summary>
            Defines a type holding data to create projectile instances.
            </summary>
        </member>
        <member name="P:SWEndor.ProjectileTypes.ProjectileTypeInfo.Engine">
            <summary>The Engine that owns this object</summary>
        </member>
        <member name="F:SWEndor.ProjectileTypes.ProjectileTypeInfo.ID">
            <summary>The ID of this object</summary>
        </member>
        <member name="F:SWEndor.ProjectileTypes.ProjectileTypeInfo.Name">
            <summary>The given name of this object</summary>
        </member>
        <member name="M:SWEndor.ProjectileTypes.ProjectileTypeInfo.Initialize(SWEndor.Core.Engine,SWEndor.Projectiles.ProjectileInfo)">
            <summary>
            Initializes a projectile instance
            </summary>
            <param name="engine">The game engine</param>
            <param name="ainfo">The instance to initialize</param>
        </member>
        <member name="M:SWEndor.ProjectileTypes.ProjectileTypeInfo.ProcessState(SWEndor.Core.Engine,SWEndor.Projectiles.ProjectileInfo)">
            <summary>
            Processes a projectile instance 
            </summary>
            <param name="engine">The game engine</param>
            <param name="ainfo">The instance to process</param>
        </member>
        <member name="M:SWEndor.ProjectileTypes.ProjectileTypeInfo.ProcessHit(SWEndor.Core.Engine,SWEndor.Projectiles.ProjectileInfo,SWEndor.Actors.ActorInfo,MTV3D65.TV_3DVECTOR)">
            <summary>
            Processes a projectile instance when a hit is registered
            </summary>
            <param name="engine">The game engine</param>
            <param name="owner">The instance to process</param>
            <param name="hitby">The actor instance that hit it</param>
            <param name="impact">The impact location</param>
        </member>
        <member name="M:SWEndor.ProjectileTypes.ProjectileTypeInfo.Dying(SWEndor.Core.Engine,SWEndor.Projectiles.ProjectileInfo)">
            <summary>
            Processes a projectile instance when it enters the Dying state
            </summary>
            <param name="engine">The game engine</param>
            <param name="ainfo">The instance to process</param>
        </member>
        <member name="M:SWEndor.ProjectileTypes.ProjectileTypeInfo.Dead(SWEndor.Core.Engine,SWEndor.Projectiles.ProjectileInfo)">
            <summary>
            Processes a projectile instance when it enters the Dead state
            </summary>
            <param name="engine">The game engine</param>
            <param name="ainfo">The instance to process</param>
        </member>
        <member name="F:SWEndor.Factory`3.Engine">
            <summary>The game engine</summary>
        </member>
        <member name="T:SWEndor.AI.ActionExt">
            <summary>
            Provides extension methods for feeding actions to an actor
            </summary>
        </member>
        <member name="M:SWEndor.AI.ActionExt.UnlockOne(SWEndor.Actors.ActorInfo)">
            <summary>Unblocks one Lock action</summary>
        </member>
        <member name="M:SWEndor.AI.ActionExt.ClearQueue(SWEndor.Actors.ActorInfo)">
            <summary>Clears the actor's action queue, until an uninterruptible action is found</summary>
        </member>
        <member name="M:SWEndor.AI.ActionExt.ForceClearQueue(SWEndor.Actors.ActorInfo)">
            <summary>Clears the actor's action queue regardless of whether the action is uninterruptible</summary>
        </member>
        <member name="M:SWEndor.AI.ActionExt.QueueFirst(SWEndor.Actors.ActorInfo,SWEndor.AI.Actions.ActionInfo)">
            <summary>Queues an action at the front of the action queue, replacing the current action</summary>
        </member>
        <member name="M:SWEndor.AI.ActionExt.QueueNext(SWEndor.Actors.ActorInfo,SWEndor.AI.Actions.ActionInfo)">
            <summary>Queues an action immediately after the current action</summary>
        </member>
        <member name="M:SWEndor.AI.ActionExt.QueueLast(SWEndor.Actors.ActorInfo,SWEndor.AI.Actions.ActionInfo)">
            <summary>Queues an action at the back of the action queue</summary>
        </member>
        <member name="M:SWEndor.AI.ActionExt.Run(SWEndor.Actors.ActorInfo,SWEndor.AI.Actions.ActionInfo)">
            <summary>Processes the current action, moving to the next if the current action is complete</summary>
        </member>
        <member name="P:SWEndor.Explosions.ExplosionInfo.TypeInfo">
            <summary>The instance type of this instance</summary>
        </member>
        <member name="F:SWEndor.Explosions.ExplosionInfo.ExplosionFactory">
            <summary>The source factory that created this instance</summary>
        </member>
        <member name="P:SWEndor.Explosions.ExplosionInfo.Engine">
            <summary>The game engine</summary>
        </member>
        <member name="P:SWEndor.Explosions.ExplosionInfo.Name">
            <summary>The instance name</summary>
        </member>
        <member name="P:SWEndor.Explosions.ExplosionInfo.ID">
            <summary>The instance ID</summary>
        </member>
        <member name="P:SWEndor.Explosions.ExplosionInfo.Key">
            <summary>The instance unique identifier</summary>
        </member>
        <member name="M:SWEndor.Explosions.ExplosionInfo.ToString">
            <summary>The instance unique string representation</summary>
        </member>
        <member name="P:SWEndor.Explosions.ExplosionInfo.Prev">
            <summary>The previous linked instance</summary>
        </member>
        <member name="P:SWEndor.Explosions.ExplosionInfo.Next">
            <summary>The next linked instance</summary>
        </member>
        <member name="P:SWEndor.Explosions.ExplosionInfo.Scope">
            <summary>A scope counter determining whether the object is still in scope or safe to dispose</summary>
        </member>
        <member name="M:SWEndor.Explosions.ExplosionInfo.Rebuild(SWEndor.Core.Engine,System.Int16,SWEndor.ExplosionTypes.ExplosionCreationInfo)">
            <summary>
            Rebuilds the instance
            </summary>
            <param name="engine">The game engine</param>
            <param name="id">The new ID</param>
            <param name="acinfo">The instance creation data</param>
        </member>
        <member name="M:SWEndor.Explosions.ExplosionInfo.Initialize(SWEndor.Core.Engine)">
            <summary>
            Initializes the game object instance
            </summary>
            <param name="engine">The game engine</param>
        </member>
        <member name="P:SWEndor.Explosions.ExplosionInfo.ParentForCoords">
            <summary>The parent of this object when considering coordinate positions</summary>
        </member>
        <member name="M:SWEndor.Explosions.ExplosionInfo.Delete">
            <summary>Mark the object for disposal</summary>
        </member>
        <member name="M:SWEndor.Explosions.ExplosionInfo.Destroy">
            <summary>Disposes the object</summary>
        </member>
        <member name="M:SWEndor.Explosions.ExplosionInfo.Tick(SWEndor.Core.Engine,System.Single)">
            <summary>
            Processes the object for one game tick
            </summary>
            <param name="engine">The game engine</param>
            <param name="time">The game time</param>
        </member>
        <member name="P:SWEndor.Explosions.ExplosionInfo.Mask">
            <summary>The component present in this instance</summary>
        </member>
        <member name="P:SWEndor.Explosions.ExplosionInfo.CreationTime">
            <summary>The in-game time when the object was created or rebuilt</summary>
        </member>
        <member name="P:SWEndor.Explosions.ExplosionInfo.CreationState">
            <summary>The creation state of this instance</summary>
        </member>
        <member name="P:SWEndor.Explosions.ExplosionInfo.Planned">
            <summary>Returns whether the creation state is PLANNED</summary>
        </member>
        <member name="P:SWEndor.Explosions.ExplosionInfo.Generated">
            <summary>Returns whether the creation state is GENERATED</summary>
        </member>
        <member name="P:SWEndor.Explosions.ExplosionInfo.Active">
            <summary>Returns whether the creation state is ACTIVE</summary>
        </member>
        <member name="P:SWEndor.Explosions.ExplosionInfo.MarkedDisposing">
            <summary>Returns whether the instance has been marked for disposal</summary>
        </member>
        <member name="P:SWEndor.Explosions.ExplosionInfo.Disposing">
            <summary>Returns whether the creation state is DISPOSING</summary>
        </member>
        <member name="P:SWEndor.Explosions.ExplosionInfo.DisposingOrDisposed">
            <summary>Returns whether the creation state is DISPOSING or already DISPOSED</summary>
        </member>
        <member name="P:SWEndor.Explosions.ExplosionInfo.Disposed">
            <summary>Returns whether the creation state is DISPOSED</summary>
        </member>
        <member name="M:SWEndor.Explosions.ExplosionInfo.SetGenerated">
            <summary>Sets the creation state to GENERATED</summary>
        </member>
        <member name="M:SWEndor.Explosions.ExplosionInfo.SetActivated">
            <summary>Sets the creation state to ACTIVE</summary>
        </member>
        <member name="M:SWEndor.Explosions.ExplosionInfo.SetPreDispose">
            <summary>Sets the creation state to PREDISPOSE</summary>
        </member>
        <member name="M:SWEndor.Explosions.ExplosionInfo.SetDisposing">
            <summary>Sets the creation state to DISPOSING</summary>
        </member>
        <member name="M:SWEndor.Explosions.ExplosionInfo.SetDisposed">
            <summary>Sets the creation state to DISPOSED</summary>
        </member>
        <member name="M:SWEndor.Explosions.ExplosionInfo.ResetPlanned">
            <summary>Sets the creation state to PLANNED</summary>
        </member>
        <member name="P:SWEndor.Explosions.ExplosionInfo.ActorState">
            <summary>Returns the actor state of this instance</summary>
        </member>
        <member name="P:SWEndor.Explosions.ExplosionInfo.IsDying">
            <summary>Returns whether the actor state is DYING</summary>
        </member>
        <member name="P:SWEndor.Explosions.ExplosionInfo.IsDead">
            <summary>Returns whether the actor state is DEAD</summary>
        </member>
        <member name="P:SWEndor.Explosions.ExplosionInfo.IsDyingOrDead">
            <summary>Returns whether the actor state is DYING or DEAD</summary>
        </member>
        <member name="M:SWEndor.Explosions.ExplosionInfo.AdvanceDeathOneLevel">
            <summary>Advances the actor state one step towards the DEAD state</summary>
        </member>
        <member name="M:SWEndor.Explosions.ExplosionInfo.SetState_Dead">
            <summary>Sets the actor state to DEAD</summary>
        </member>
        <member name="M:SWEndor.Explosions.ExplosionInfo.SetState_Dying">
            <summary>Sets the actor state to DYING</summary>
        </member>
        <member name="M:SWEndor.Explosions.ExplosionInfo.SetState_Normal">
            <summary>Sets the actor state to NORMAL</summary>
        </member>
        <member name="P:SWEndor.Explosions.ExplosionInfo.Position">
            <summary>The local position of the object</summary>
        </member>
        <member name="P:SWEndor.Explosions.ExplosionInfo.PrevPosition">
            <summary>The previous local position of the object</summary>
        </member>
        <member name="P:SWEndor.Explosions.ExplosionInfo.Rotation">
            <summary>The local rotation of the object</summary>
        </member>
        <member name="P:SWEndor.Explosions.ExplosionInfo.PrevRotation">
            <summary>The previous local rotation of the object</summary>
        </member>
        <member name="P:SWEndor.Explosions.ExplosionInfo.Direction">
            <summary>The local direction of the object</summary>
        </member>
        <member name="P:SWEndor.Explosions.ExplosionInfo.Scale">
            <summary>The scale of the object</summary>
        </member>
        <member name="M:SWEndor.Explosions.ExplosionInfo.GetWorldMatrix">
            <summary>Gets the world transformation matrix of the object</summary>
        </member>
        <member name="M:SWEndor.Explosions.ExplosionInfo.GetPrevWorldMatrix">
            <summary>Gets the previous world transformation matrix of the object</summary>
        </member>
        <member name="M:SWEndor.Explosions.ExplosionInfo.GetGlobalPosition">
            <summary>Extracts the world position from the object's transformation matrix</summary>
        </member>
        <member name="M:SWEndor.Explosions.ExplosionInfo.GetPrevGlobalPosition">
            <summary>Extracts the previous world position from the object's transformation matrix</summary>
        </member>
        <member name="M:SWEndor.Explosions.ExplosionInfo.GetGlobalRotation">
            <summary>Extracts the world rotation from the object's transformation matrix</summary>
        </member>
        <member name="M:SWEndor.Explosions.ExplosionInfo.GetGlobalDirection">
            <summary>Extracts the world direction from the object's transformation matrix</summary>
        </member>
        <member name="M:SWEndor.Explosions.ExplosionInfo.GetRelativePositionFUR(System.Single,System.Single,System.Single,System.Boolean)">
            <summary>Gets the relative offset from an object</summary>
        </member>
        <member name="M:SWEndor.Explosions.ExplosionInfo.GetRelativePositionXYZ(System.Single,System.Single,System.Single,System.Boolean)">
            <summary>Gets the relative offset from an object</summary>
        </member>
        <member name="M:SWEndor.Explosions.ExplosionInfo.MoveRelative(System.Single,System.Single,System.Single)">
            <summary>Moves the object by the relative offset</summary>
        </member>
        <member name="M:SWEndor.Explosions.ExplosionInfo.MoveAbsolute(System.Single,System.Single,System.Single)">
            <summary>Moves the object by world coordinate offset</summary>
        </member>
        <member name="M:SWEndor.Explosions.ExplosionInfo.LookAt(MTV3D65.TV_3DVECTOR)">
            <summary>Rotates the object to look at an object, eliminating its Z-rotation in the process</summary>
        </member>
        <member name="M:SWEndor.FileFormat.INI.INIFile.SetString(System.String,System.String,System.String)">
            <summary>
            Sets a string value in the INIFile 
            </summary>
            <param name="section">The section that will contain the key-value pair</param>
            <param name="key">The key that will contain the value</param>
            <param name="value">The value to be set</param>
        </member>
        <member name="M:SWEndor.FileFormat.INI.INIFile.SetInt(System.String,System.String,System.Int32)">
            <summary>
            Sets an int value in the INIFile 
            </summary>
            <param name="section">The section that will contain the key-value pair</param>
            <param name="key">The key that will contain the value</param>
            <param name="value">The value to be set</param>
        </member>
        <member name="M:SWEndor.FileFormat.INI.INIFile.SetFloat(System.String,System.String,System.Single)">
            <summary>
            Sets a float value in the INIFile 
            </summary>
            <param name="section">The section that will contain the key-value pair</param>
            <param name="key">The key that will contain the value</param>
            <param name="value">The value to be set</param>
        </member>
        <member name="M:SWEndor.FileFormat.INI.INIFile.SetDouble(System.String,System.String,System.Double)">
            <summary>
            Sets a double value in the INIFile 
            </summary>
            <param name="section">The section that will contain the key-value pair</param>
            <param name="key">The key that will contain the value</param>
            <param name="value">The value to be set</param>
        </member>
        <member name="M:SWEndor.FileFormat.INI.INIFile.SetBool(System.String,System.String,System.Boolean)">
            <summary>
            Sets a bool value in the INIFile 
            </summary>
            <param name="section">The section that will contain the key-value pair</param>
            <param name="key">The key that will contain the value</param>
            <param name="value">The value to be set</param>
        </member>
        <member name="M:SWEndor.FileFormat.INI.INIFile.SetIntArray(System.String,System.String,System.Int32[],System.Char)">
            <summary>
            Sets an int[] array in the INIFile 
            </summary>
            <param name="section">The section that will contain the key-value pair</param>
            <param name="key">The key that will contain the value</param>
            <param name="list">The array of values to be set</param>
            <param name="delimiter">The delimiter to be inserted between values</param>
        </member>
        <member name="M:SWEndor.FileFormat.INI.INIFile.SetFloatArray(System.String,System.String,System.Single[],System.Char)">
            <summary>
            Sets a float[] array in the INIFile 
            </summary>
            <param name="section">The section that will contain the key-value pair</param>
            <param name="key">The key that will contain the value</param>
            <param name="list">The array of values to be set</param>
            <param name="delimiter">The delimiter to be inserted between values</param>
        </member>
        <member name="M:SWEndor.FileFormat.INI.INIFile.SetFloat2(System.String,System.String,Primrose.Primitives.ValueTypes.float2,System.Char)">
            <summary>
            Sets a float2 value in the INIFile 
            </summary>
            <param name="section">The section that will contain the key-value pair</param>
            <param name="key">The key that will contain the value</param>
            <param name="value">The value to be set</param>
            <param name="delimiter">The delimiter to be inserted between values</param>
        </member>
        <member name="M:SWEndor.FileFormat.INI.INIFile.SetFloat3(System.String,System.String,Primrose.Primitives.ValueTypes.float3,System.Char)">
            <summary>
            Sets a float3 value in the INIFile 
            </summary>
            <param name="section">The section that will contain the key-value pair</param>
            <param name="key">The key that will contain the value</param>
            <param name="value">The value to be set</param>
            <param name="delimiter">The delimiter to be inserted between values</param>
        </member>
        <member name="M:SWEndor.FileFormat.INI.INIFile.SetFloat4(System.String,System.String,Primrose.Primitives.ValueTypes.float4,System.Char)">
            <summary>
            Sets a float4 value in the INIFile 
            </summary>
            <param name="section">The section that will contain the key-value pair</param>
            <param name="key">The key that will contain the value</param>
            <param name="value">The value to be set</param>
            <param name="delimiter">The delimiter to be inserted between values</param>
        </member>
        <member name="M:SWEndor.FileFormat.INI.INIFile.SetDoubleArray(System.String,System.String,System.Double[],System.Char)">
            <summary>
            Sets a double[] array in the INIFile 
            </summary>
            <param name="section">The section that will contain the key-value pair</param>
            <param name="key">The key that will contain the value</param>
            <param name="list">The array of values to be set</param>
            <param name="delimiter">The delimiter to be inserted between values</param>
        </member>
        <member name="M:SWEndor.FileFormat.INI.INIFile.SetBoolArray(System.String,System.String,System.Boolean[],System.Char)">
            <summary>
            Sets a bool[] array in the INIFile 
            </summary>
            <param name="section">The section that will contain the key-value pair</param>
            <param name="key">The key that will contain the value</param>
            <param name="list">The array of values to be set</param>
            <param name="delimiter">The delimiter to be inserted between values</param>
        </member>
        <member name="M:SWEndor.FileFormat.INI.INIFile.SetStringArray(System.String,System.String,System.String[],System.Char)">
            <summary>
            Sets a string[] array in the INIFile 
            </summary>
            <param name="section">The section that will contain the key-value pair</param>
            <param name="key">The key that will contain the value</param>
            <param name="list">The array of values to be set</param>
            <param name="delimiter">The delimiter to be inserted between values</param>
        </member>
        <member name="M:SWEndor.FileFormat.INI.INIFile.SetEnum``1(System.String,System.String,``0)">
            <summary>
            Sets an enum value in the INIFile 
            </summary>
            <param name="section">The section that will contain the key-value pair</param>
            <param name="key">The key that will contain the value</param>
            <param name="value">The value to be set</param>
        </member>
        <member name="F:SWEndor.FileFormat.INI.INIFile.DefaultDelimiter">
            <summary>
            The default delimiter referenced for use in the INIFile class
            </summary>
        </member>
        <member name="M:SWEndor.FileFormat.INI.INIFile.GetString(System.String,System.String,System.String)">
            <summary>
            Gets a string value from the INIFile 
            </summary>
            <param name="section">The section containing the key-value pair</param>
            <param name="key">The key containing the value</param>
            <param name="defaultValue">The default value</param>
            <returns>The value belong to the section and key in the INIFile. If any key does not exist, returns defaultValue</returns>
        </member>
        <member name="M:SWEndor.FileFormat.INI.INIFile.GetInt(System.String,System.String,System.Int32)">
            <summary>
            Gets an int value from the INIFile 
            </summary>
            <param name="section">The section containing the key-value pair</param>
            <param name="key">The key containing the value</param>
            <param name="defaultValue">The default value</param>
            <returns>The value belong to the section and key in the INIFile. If any key does not exist, returns defaultValue</returns>
        </member>
        <member name="M:SWEndor.FileFormat.INI.INIFile.GetUInt(System.String,System.String,System.UInt32)">
            <summary>
            Gets a uint value from the INIFile 
            </summary>
            <param name="section">The section containing the key-value pair</param>
            <param name="key">The key containing the value</param>
            <param name="defaultValue">The default value</param>
            <returns>The value belong to the section and key in the INIFile. If any key does not exist, returns defaultValue</returns>
        </member>
        <member name="M:SWEndor.FileFormat.INI.INIFile.GetFloat(System.String,System.String,System.Single)">
            <summary>
            Gets a float value from the INIFile 
            </summary>
            <param name="section">The section containing the key-value pair</param>
            <param name="key">The key containing the value</param>
            <param name="defaultValue">The default value</param>
            <returns>The value belong to the section and key in the INIFile. If any key does not exist, returns defaultValue</returns>
        </member>
        <member name="M:SWEndor.FileFormat.INI.INIFile.GetDouble(System.String,System.String,System.Double)">
            <summary>
            Gets a double value from the INIFile 
            </summary>
            <param name="section">The section containing the key-value pair</param>
            <param name="key">The key containing the value</param>
            <param name="defaultValue">The default value</param>
            <returns>The value belong to the section and key in the INIFile. If any key does not exist, returns defaultValue</returns>
        </member>
        <member name="M:SWEndor.FileFormat.INI.INIFile.GetFloat2(System.String,System.String,Primrose.Primitives.ValueTypes.float2)">
            <summary>
            Gets a float2 value from the INIFile 
            </summary>
            <param name="section">The section containing the key-value pair</param>
            <param name="key">The key containing the value</param>
            <param name="defaultValue">The default value</param>
            <returns>The value belong to the section and key in the INIFile. If any key does not exist, returns defaultValue</returns>
        </member>
        <member name="M:SWEndor.FileFormat.INI.INIFile.GetFloat3(System.String,System.String,Primrose.Primitives.ValueTypes.float3)">
            <summary>
            Gets a float3 value from the INIFile 
            </summary>
            <param name="section">The section containing the key-value pair</param>
            <param name="key">The key containing the value</param>
            <param name="defaultValue">The default value</param>
            <returns>The value belong to the section and key in the INIFile. If any key does not exist, returns defaultValue</returns>
        </member>
        <member name="M:SWEndor.FileFormat.INI.INIFile.GetFloat4(System.String,System.String,Primrose.Primitives.ValueTypes.float4)">
            <summary>
            Gets a float4 value from the INIFile 
            </summary>
            <param name="section">The section containing the key-value pair</param>
            <param name="key">The key containing the value</param>
            <param name="defaultValue">The default value</param>
            <returns>The value belong to the section and key in the INIFile. If any key does not exist, returns defaultValue</returns>
        </member>
        <member name="M:SWEndor.FileFormat.INI.INIFile.GetIntArray(System.String,System.String,System.Int32[])">
            <summary>
            Gets an int[] array from the INIFile 
            </summary>
            <param name="section">The section containing the key-value pair</param>
            <param name="key">The key containing the value</param>
            <param name="defaultList">The default array</param>
            <returns>The value belong to the section and key in the INIFile. If any key does not exist, returns defaultValue</returns>
        </member>
        <member name="T:SWEndor.Scenarios.Scripting.Expressions.FunctionDelegate">
            <summary>
            Represents a function for the script language to interact with the game context
            </summary>
            <param name="context">The game context</param>
            <param name="param">The list of parameters entering this function</param>
            <returns>A Val value for further processing</returns>
        </member>
        <member name="T:SWEndor.Scenarios.Scripting.Expressions.Context">
            <summary>
            Provides the game context for the script
            </summary>
        </member>
        <member name="F:SWEndor.Scenarios.Scripting.Expressions.Context.Engine">
            <summary>The game engine</summary>
        </member>
        <member name="F:SWEndor.Scenarios.Scripting.Expressions.Context.Functions">
            <summary>The list of supported game functions</summary>
        </member>
        <member name="M:SWEndor.Scenarios.Scripting.Expressions.Context.RunFunction(Primrose.Expressions.ITracker,System.String,Primrose.Expressions.Val[])">
            <summary>
            Runs a user defined function. An EvalException should be thrown if errors arise from the function.
            </summary>
            <param name="caller">The script object that called this function</param>
            <param name="_funcName">The function name</param>
            <param name="param">The list of parameters</param>
            <returns></returns>
        </member>
        <member name="M:SWEndor.Scenarios.Scripting.Functions.MiscFns.IsNull(Primrose.Expressions.AContext,Primrose.Expressions.Val[])">
            <summary>
            Gets the element of an array. This is functionally equivalent to the indexer 'array[i]', except that this function cannot be used on float2/float3/float4
            </summary>
            <param name="context">The game context</param>
            <param name="ps">
              Parameters: 
                BOOL[]/INT[]/FLOAT[] array
            </param>
            <returns>BOOL/INT/FLOAT, depending on the input</returns>
        </member>
        <member name="M:SWEndor.Scenarios.Scripting.Functions.MiscFns.GetArrayElement(SWEndor.Scenarios.Scripting.Expressions.Context,Primrose.Expressions.Val[])">
            <summary>
            Gets the element of an array. This is functionally equivalent to the indexer 'array[i]', except that this function cannot be used on float2/float3/float4
            </summary>
            <param name="context">The game context</param>
            <param name="ps">
              Parameters: 
                BOOL[]/INT[]/FLOAT[] array
            </param>
            <returns>BOOL/INT/FLOAT, depending on the input</returns>
        </member>
        <member name="M:SWEndor.Scenarios.Scripting.Functions.ScoreFns.SetScorePerLife(SWEndor.Scenarios.Scripting.Expressions.Context,Primrose.Expressions.Val[])">
            <summary>
            Sets the score increment required for the player to receive 1 life
            </summary>
            <param name="context">The game context</param>
            <param name="ps">
              Parameters: 
                FLOAT score
            </param>
            <returns>NULL</returns>
        </member>
        <member name="M:SWEndor.Scenarios.Scripting.Functions.ScoreFns.SetScoreForNextLife(SWEndor.Scenarios.Scripting.Expressions.Context,Primrose.Expressions.Val[])">
            <summary>
            Sets the next score required for the player to receive 1 life
            </summary>
            <param name="context">The game context</param>
            <param name="ps">
              Parameters: 
                FLOAT score
            </param>
            <returns>NULL</returns>
        </member>
        <member name="M:SWEndor.Scenarios.Scripting.Functions.ScoreFns.ResetScore(SWEndor.Scenarios.Scripting.Expressions.Context,Primrose.Expressions.Val[])">
            <summary>
            Resets the player score. This also resets the player statistics such as kill/hit/damage/death count
            </summary>
            <param name="context">The game context</param>
            <param name="ps">
              Parameters: 
                NONE
            </param>
            <returns>NULL</returns>
        </member>
        <member name="M:SWEndor.Scenarios.Scripting.Functions.ScriptingFns.CallScript(SWEndor.Scenarios.Scripting.Expressions.Context,Primrose.Expressions.Val[])">
            <summary>
            Calls another script for execution
            </summary>
            <param name="context">The game context</param>
            <param name="ps">
              Parameters: 
                STRING script_name
            </param>
            <returns>TRUE if a script is found, FALSE otherwise</returns>
        </member>
        <member name="M:SWEndor.Scenarios.Scripting.Functions.ScriptingFns.CallScriptX(SWEndor.Scenarios.Scripting.Expressions.Context,Primrose.Expressions.Val[])">
            <summary>
            Calls another script for execution. This is the strict counterpart to CallScript.
            </summary>
            <param name="context">The game context</param>
            <param name="ps">
              Parameters: 
                STRING script_name
            </param>
            <returns>NULL. Throws an exception if no script is found.</returns>
        </member>
        <member name="M:SWEndor.Scenarios.Scripting.Functions.PlayerFns.AssignActor(SWEndor.Scenarios.Scripting.Expressions.Context,Primrose.Expressions.Val[])">
            <summary>
            Assigns an actor of this ID the player actor ID. Unassigns the player actor if actor_id is negative.
            </summary>
            <param name="context">The game context</param>
            <param name="ps">
              Parameters: 
                INT actor_id
            </param>
            <returns>TRUE if the assignment is successful, otherwise (i.e. there is no actor having this ID) returns FALSE. If the actor_id is negative, always returns TRUE.</returns>
        </member>
        <member name="M:SWEndor.Scenarios.Scripting.Functions.PlayerFns.GetActor(SWEndor.Scenarios.Scripting.Expressions.Context,Primrose.Expressions.Val[])">
            <summary>
            Returns the player actor ID
            </summary>
            <param name="context">The game context</param>
            <param name="ps">
              Parameters: 
                NONE
            </param>
            <returns>INT representing the actor's ID if an actor is found, otherwise returns -1</returns>
        </member>
        <member name="M:SWEndor.Scenarios.Scripting.Functions.PlayerFns.RequestSpawn(SWEndor.Scenarios.Scripting.Expressions.Context,Primrose.Expressions.Val[])">
            <summary>
            Toggles a request to spawn the player. If a spawner belonging to the player's faction exists, it will respawn the player. Otherwise, this has no effect.
            </summary>
            <param name="context">The game context</param>
            <param name="ps">
              Parameters: 
                NONE
            </param>
            <returns>NULL</returns>
        </member>
        <member name="M:SWEndor.Scenarios.Scripting.Functions.PlayerFns.SetMovementEnabled(SWEndor.Scenarios.Scripting.Expressions.Context,Primrose.Expressions.Val[])">
            <summary>
            Enables/disables the player movement controls 
            </summary>
            <param name="context">The game context</param>
            <param name="ps">
              Parameters: 
                BOOL enabled
            </param>
            <returns>NULL</returns>
        </member>
        <member name="M:SWEndor.Scenarios.Scripting.Functions.PlayerFns.SetAI(SWEndor.Scenarios.Scripting.Expressions.Context,Primrose.Expressions.Val[])">
            <summary>
            Enables/disables the player AI
            </summary>
            <param name="context">The game context</param>
            <param name="ps">
              Parameters: 
                BOOL enabled
            </param>
            <returns>NULL</returns>
        </member>
        <member name="M:SWEndor.Scenarios.Scripting.Functions.PlayerFns.SetLives(SWEndor.Scenarios.Scripting.Expressions.Context,Primrose.Expressions.Val[])">
            <summary>
            Sets the number of lives for the player
            </summary>
            <param name="context">The game context</param>
            <param name="ps">
              Parameters: 
                INT lives
            </param>
            <returns>NULL</returns>
        </member>
        <member name="M:SWEndor.Scenarios.Scripting.Functions.PlayerFns.DecreaseLives(SWEndor.Scenarios.Scripting.Expressions.Context,Primrose.Expressions.Val[])">
            <summary>
            Decrements 1 life from the player
            </summary>
            <param name="context">The game context</param>
            <param name="ps">
              Parameters: 
                NONE
            </param>
            <returns>NULL</returns>
        </member>
        <member name="T:SWEndor.Scenarios.Scripting.Functions.FactionFns">
            <summary>
            Script API for Faction functions
            </summary>
        </member>
        <member name="M:SWEndor.Scenarios.Scripting.Functions.FactionFns.AddFaction(SWEndor.Scenarios.Scripting.Expressions.Context,Primrose.Expressions.Val[])">
            <summary>
            Creates a faction. This function does nothing if a faction of the same name already exists.
            </summary>
            <param name="context">The game context</param>
            <param name="ps">
              Parameters: 
                0 STRING faction_name
                1 FLOAT3 faction_color
            </param>
            <returns>NULL</returns>
        </member>
        <member name="M:SWEndor.Scenarios.Scripting.Functions.FactionFns.MakeAlly(SWEndor.Scenarios.Scripting.Expressions.Context,Primrose.Expressions.Val[])">
            <summary>
            Makes two factions to be allies. Does nothing if the factions are already allies.
            </summary>
            <param name="context">The game context</param>
            <param name="ps">
              Parameters: 
                0 STRING faction_1_name
                1 STRING faction_2_name
            </param>
            <returns>NULL</returns>
            <exception cref="T:System.InvalidOperationException">At least one of the factions are invalid</exception>
        </member>
        <member name="M:SWEndor.Scenarios.Scripting.Functions.FactionFns.MakeEnemy(SWEndor.Scenarios.Scripting.Expressions.Context,Primrose.Expressions.Val[])">
            <summary>
            Makes two factions to be enemies. Does nothing if the factions are already enemies.
            </summary>
            <param name="context">The game context</param>
            <param name="ps">
              Parameters: 
                0 STRING faction_1_name
                1 STRING faction_2_name
            </param>
            <returns>NULL</returns>
            <exception cref="T:System.InvalidOperationException">At least one of the factions are invalid</exception>
        </member>
        <member name="M:SWEndor.Scenarios.Scripting.Functions.FactionFns.GetWingCount(SWEndor.Scenarios.Scripting.Expressions.Context,Primrose.Expressions.Val[])">
            <summary>
            Gets the faction's WingCount 
            </summary>
            <param name="context">The game context</param>
            <param name="ps">
              Parameters: 
                0 STRING faction_name
            </param>
            <returns>INT count</returns>
            <exception cref="T:System.InvalidOperationException">The faction is not defined</exception>
        </member>
        <member name="M:SWEndor.Scenarios.Scripting.Functions.FactionFns.GetShipCount(SWEndor.Scenarios.Scripting.Expressions.Context,Primrose.Expressions.Val[])">
            <summary>
            Gets the faction's ShipCount 
            </summary>
            <param name="context">The game context</param>
            <param name="ps">
              Parameters: 
                0 STRING faction_name
            </param>
            <returns>INT count</returns>
            <exception cref="T:System.InvalidOperationException">The faction is not defined</exception>
        </member>
        <member name="M:SWEndor.Scenarios.Scripting.Functions.FactionFns.GetStructureCount(SWEndor.Scenarios.Scripting.Expressions.Context,Primrose.Expressions.Val[])">
            <summary>
            Gets the faction's StructureCount 
            </summary>
            <param name="context">The game context</param>
            <param name="ps">
              Parameters: 
                0 STRING faction_name
            </param>
            <returns>INT count</returns>
            <exception cref="T:System.InvalidOperationException">The faction is not defined</exception>
        </member>
        <member name="M:SWEndor.Scenarios.Scripting.Functions.FactionFns.GetWingLimit(SWEndor.Scenarios.Scripting.Expressions.Context,Primrose.Expressions.Val[])">
            <summary>
            Gets the faction's WingLimit 
            </summary>
            <param name="context">The game context</param>
            <param name="ps">
              Parameters: 
                0 STRING faction_name
            </param>
            <returns>INT limit</returns>
            <exception cref="T:System.InvalidOperationException">The faction is not defined</exception>
        </member>
        <member name="M:SWEndor.Scenarios.Scripting.Functions.FactionFns.GetShipLimit(SWEndor.Scenarios.Scripting.Expressions.Context,Primrose.Expressions.Val[])">
            <summary>
            Gets the faction's ShipLimit 
            </summary>
            <param name="context">The game context</param>
            <param name="ps">
              Parameters: 
                0 STRING faction_name
            </param>
            <returns>INT limit</returns>
            <exception cref="T:System.InvalidOperationException">The faction is not defined</exception>
        </member>
        <member name="M:SWEndor.Scenarios.Scripting.Functions.FactionFns.GetStructureLimit(SWEndor.Scenarios.Scripting.Expressions.Context,Primrose.Expressions.Val[])">
            <summary>
            Gets the faction's StructureLimit 
            </summary>
            <param name="context">The game context</param>
            <param name="ps">
              Parameters: 
                0 STRING faction_name
            </param>
            <returns>INT limit</returns>
            <exception cref="T:System.InvalidOperationException">The faction is not defined</exception>
        </member>
        <member name="M:SWEndor.Scenarios.Scripting.Functions.FactionFns.SetWingLimit(SWEndor.Scenarios.Scripting.Expressions.Context,Primrose.Expressions.Val[])">
            <summary>
            Sets the faction's WingLimit 
            </summary>
            <param name="context">The game context</param>
            <param name="ps">
              Parameters: 
                0 STRING faction_name
                1 INT value
            </param>
            <returns>NULL</returns>
            <exception cref="T:System.InvalidOperationException">The faction is not defined</exception>
        </member>
        <member name="M:SWEndor.Scenarios.Scripting.Functions.FactionFns.SetShipLimit(SWEndor.Scenarios.Scripting.Expressions.Context,Primrose.Expressions.Val[])">
            <summary>
            Sets the faction's ShipLimit 
            </summary>
            <param name="context">The game context</param>
            <param name="ps">
              Parameters: 
                0 STRING faction_name
                1 INT value
            </param>
            <returns>NULL</returns>
            <exception cref="T:System.InvalidOperationException">The faction is not defined</exception>
        </member>
        <member name="M:SWEndor.Scenarios.Scripting.Functions.FactionFns.SetStructureLimit(SWEndor.Scenarios.Scripting.Expressions.Context,Primrose.Expressions.Val[])">
            <summary>
            Sets the faction's StructureLimit 
            </summary>
            <param name="context">The game context</param>
            <param name="ps">
              Parameters: 
                0 STRING faction_name
                1 INT value
            </param>
            <returns>NULL</returns>
            <exception cref="T:System.InvalidOperationException">The faction is not defined</exception>
        </member>
        <member name="M:SWEndor.Scenarios.Scripting.Functions.FactionFns.GetWingSpawnLimit(SWEndor.Scenarios.Scripting.Expressions.Context,Primrose.Expressions.Val[])">
            <summary>
            Gets the faction's WingSpawnLimit 
            </summary>
            <param name="context">The game context</param>
            <param name="ps">
              Parameters: 
                0 STRING faction_name
            </param>
            <returns>INT count</returns>
            <exception cref="T:System.InvalidOperationException">The faction is not defined</exception>
        </member>
        <member name="M:SWEndor.Scenarios.Scripting.Functions.FactionFns.GetShipSpawnLimit(SWEndor.Scenarios.Scripting.Expressions.Context,Primrose.Expressions.Val[])">
            <summary>
            Gets the faction's ShipSpawnLimit 
            </summary>
            <param name="context">The game context</param>
            <param name="ps">
              Parameters: 
                0 STRING faction_name
            </param>
            <returns>INT count</returns>
            <exception cref="T:System.InvalidOperationException">The faction is not defined</exception>
        </member>
        <member name="M:SWEndor.Scenarios.Scripting.Functions.FactionFns.GetStructureSpawnLimit(SWEndor.Scenarios.Scripting.Expressions.Context,Primrose.Expressions.Val[])">
            <summary>
            Gets the faction's StructureSpawnLimit 
            </summary>
            <param name="context">The game context</param>
            <param name="ps">
              Parameters: 
                0 STRING faction_name
            </param>
            <returns>INT count</returns>
            <exception cref="T:System.InvalidOperationException">The faction is not defined</exception>
        </member>
        <member name="M:SWEndor.Scenarios.Scripting.Functions.FactionFns.SetWingSpawnLimit(SWEndor.Scenarios.Scripting.Expressions.Context,Primrose.Expressions.Val[])">
            <summary>
            Sets the faction's WingSpawnLimit 
            </summary>
            <param name="context">The game context</param>
            <param name="ps">
              Parameters: 
                0 STRING faction_name
                1 INT value
            </param>
            <returns>NULL</returns>
            <exception cref="T:System.InvalidOperationException">The faction is not defined</exception>
        </member>
        <member name="M:SWEndor.Scenarios.Scripting.Functions.FactionFns.SetShipSpawnLimit(SWEndor.Scenarios.Scripting.Expressions.Context,Primrose.Expressions.Val[])">
            <summary>
            Sets the faction's ShipSpawnLimit 
            </summary>
            <param name="context">The game context</param>
            <param name="ps">
              Parameters: 
                0 STRING faction_name
                1 INT value
            </param>
            <returns>NULL</returns>
            <exception cref="T:System.InvalidOperationException">The faction is not defined</exception>
        </member>
        <member name="M:SWEndor.Scenarios.Scripting.Functions.FactionFns.SetStructureSpawnLimit(SWEndor.Scenarios.Scripting.Expressions.Context,Primrose.Expressions.Val[])">
            <summary>
            Sets the faction's StructureSpawnLimit 
            </summary>
            <param name="context">The game context</param>
            <param name="ps">
              Parameters: 
                0 STRING faction_name
                1 INT value
            </param>
            <returns>NULL</returns>
            <exception cref="T:System.InvalidOperationException">The faction is not defined</exception>
        </member>
        <member name="M:SWEndor.Scenarios.Scripting.Functions.UIFns.SetUILine1Color(SWEndor.Scenarios.Scripting.Expressions.Context,Primrose.Expressions.Val[])">
            <summary>
            Sets the color of line 1 of the scenario UI
            </summary>
            <param name="context">The game context</param>
            <param name="ps">
              Parameters: 
                FLOAT3 color
            </param>
            <returns>NULL</returns>
        </member>
        <member name="M:SWEndor.Scenarios.Scripting.Functions.UIFns.SetUILine2Color(SWEndor.Scenarios.Scripting.Expressions.Context,Primrose.Expressions.Val[])">
            <summary>
            Sets the color of line 2 of the scenario UI
            </summary>
            <param name="context">The game context</param>
            <param name="ps">
              Parameters: 
                FLOAT3 color
            </param>
            <returns>NULL</returns>
        </member>
        <member name="M:SWEndor.Scenarios.Scripting.Functions.UIFns.SetUILine3Color(SWEndor.Scenarios.Scripting.Expressions.Context,Primrose.Expressions.Val[])">
            <summary>
            Sets the color of line 3 of the scenario UI
            </summary>
            <param name="context">The game context</param>
            <param name="ps">
              Parameters: 
                FLOAT3 color
            </param>
            <returns>NULL</returns>
        </member>
        <member name="M:SWEndor.Scenarios.Scripting.Functions.UIFns.SetUILine1Text(SWEndor.Scenarios.Scripting.Expressions.Context,Primrose.Expressions.Val[])">
            <summary>
            Sets the text of line 1 of the scenario UI
            </summary>
            <param name="context">The game context</param>
            <param name="ps">
              Parameters: 
                STRING text
            </param>
            <returns>NULL</returns>
        </member>
        <member name="M:SWEndor.Scenarios.Scripting.Functions.UIFns.SetUILine2Text(SWEndor.Scenarios.Scripting.Expressions.Context,Primrose.Expressions.Val[])">
            <summary>
            Sets the text of line 2 of the scenario UI
            </summary>
            <param name="context">The game context</param>
            <param name="ps">
              Parameters: 
                STRING text
            </param>
            <returns>NULL</returns>
        </member>
        <member name="M:SWEndor.Scenarios.Scripting.Functions.UIFns.SetUILine3Text(SWEndor.Scenarios.Scripting.Expressions.Context,Primrose.Expressions.Val[])">
            <summary>
            Sets the text of line 3 of the scenario UI
            </summary>
            <param name="context">The game context</param>
            <param name="ps">
              Parameters: 
                STRING text
            </param>
            <returns>NULL</returns>
        </member>
        <member name="M:SWEndor.Scenarios.Scripting.Functions.MessagingFns.MessageText(SWEndor.Scenarios.Scripting.Expressions.Context,Primrose.Expressions.Val[])">
            <summary>
            Prints a message text on the center of the screen
            </summary>
            <param name="context">The game context</param>
            <param name="ps">
              Parameters: 
                STRING text, 
                INT expiretime, 
                FLOAT3 color,
                optional INT priority
            </param>
            <returns>NULL</returns>
        </member>
        <member name="M:SWEndor.Scenarios.Scripting.Functions.ActorFns.Squadron_Spawn(SWEndor.Scenarios.Scripting.Expressions.Context,Primrose.Expressions.Val[])">
            <summary>
            Spawns a group of actors and assigns them to a single squadron
            </summary>
            <param name="context">The game context</param>
            <param name="ps">
              Parameters: 
                0 STRING actor_type, 
                1 STRING squad_name, 
                2 STRING faction,
                3 INT squad_count,
                4 FLOAT spawn_time,
                5 BOOL hyperspaceIn,
                6 FLOAT3 position,
                7 FLOAT3 rotation,
                8 STRING squad_formation,
                9 FLOAT formation_distance,
                10 FLOAT wait_delay,  // ai
                11 STRING targetType, // ai
                12+ param STRING[] registries // TO-DO: Remove, replace registries
            </param>
            <returns>INT[] containing the IDs of the spawned actors</returns>
        </member>
        <member name="M:SWEndor.Scenarios.Scripting.Functions.ActorFns.Spawn(SWEndor.Scenarios.Scripting.Expressions.Context,Primrose.Expressions.Val[])">
            <summary>
            Spawns an actor
            </summary>
            <param name="context">The game context</param>
            <param name="ps">
              Parameters: 
                0 STRING actor_type, 
                1 STRING actor_name,
                2 STRING faction,
                3 STRING sidebar_name,
                4 FLOAT spawntime,
                5 FLOAT3 position, 
                6 FLOAT3 rotation, 
                7+ param STRING[] registries // TO-DO: Remove, replace registries
            </param>
            <returns>INT: the ID of the spawned actor. If the spawn failed, returns -1</returns>
        </member>
        <member name="M:SWEndor.Scenarios.Scripting.Functions.SceneFns.SetMood(SWEndor.Scenarios.Scripting.Expressions.Context,Primrose.Expressions.Val[])">
            <summary>
            Triggers the audio Mood
            </summary>
            <param name="context">The game context</param>
            <param name="ps">
              Parameters: 
                INT mood
            </param>
            <returns>NULL</returns>
        </member>
        <member name="M:SWEndor.Scenarios.Scripting.Functions.SceneFns.SetMaxBounds(SWEndor.Scenarios.Scripting.Expressions.Context,Primrose.Expressions.Val[])">
            <summary>
            Max the maximum scene boundaries for the player
            </summary>
            <param name="context">The game context</param>
            <param name="ps">
              Parameters: 
                FLOAT3 bounds
            </param>
            <returns>NULL</returns>
        </member>
        <member name="M:SWEndor.Scenarios.Scripting.Functions.SceneFns.SetMinBounds(SWEndor.Scenarios.Scripting.Expressions.Context,Primrose.Expressions.Val[])">
            <summary>
            Max the minimum scene boundaries for the player
            </summary>
            <param name="context">The game context</param>
            <param name="ps">
              Parameters: 
                FLOAT3 bounds
            </param>
            <returns>NULL</returns>    
        </member>
        <member name="M:SWEndor.Scenarios.Scripting.Functions.SceneFns.SetMaxAIBounds(SWEndor.Scenarios.Scripting.Expressions.Context,Primrose.Expressions.Val[])">
            <summary>
            Max the maximum scene boundaries for the AI
            </summary>
            <param name="context">The game context</param>
            <param name="ps">
              Parameters: 
                FLOAT3 bounds
            </param>
            <returns>NULL</returns>
        </member>
        <member name="M:SWEndor.Scenarios.Scripting.Functions.SceneFns.SetMinAIBounds(SWEndor.Scenarios.Scripting.Expressions.Context,Primrose.Expressions.Val[])">
            <summary>
            Max the minimum scene boundaries for the AI
            </summary>
            <param name="context">The game context</param>
            <param name="ps">
              Parameters: 
                FLOAT3 bounds
            </param>
            <returns>NULL</returns>
        </member>
        <member name="M:SWEndor.Scenarios.Scripting.Functions.SceneFns.EnableInformLostWing(SWEndor.Scenarios.Scripting.Expressions.Context,Primrose.Expressions.Val[])">
            <summary>
            Enables/disables lost fighter notifications
            </summary>
            <param name="context">The game context</param>
            <param name="ps">
              Parameters: 
                NONE
            </param>
            <returns>NULL</returns>
        </member>
        <member name="M:SWEndor.Scenarios.Scripting.Functions.SceneFns.EnableInformLostShip(SWEndor.Scenarios.Scripting.Expressions.Context,Primrose.Expressions.Val[])">
            <summary>
            Enables/disables lost ship notifications
            </summary>
            <param name="context">The game context</param>
            <param name="ps">
              Parameters: 
                NONE
            </param>
            <returns>NULL</returns>
        </member>
        <member name="M:SWEndor.Scenarios.Scripting.Functions.SceneFns.EnableInformLostStructure(SWEndor.Scenarios.Scripting.Expressions.Context,Primrose.Expressions.Val[])">
            <summary>
            Enables/disables lost structure notifications
            </summary>
            <param name="context">The game context</param>
            <param name="ps">
              Parameters: 
                NONE
            </param>
            <returns>NULL</returns>
        </member>
        <member name="M:SWEndor.Scenarios.Scripting.Functions.SceneFns.FadeOut(SWEndor.Scenarios.Scripting.Expressions.Context,Primrose.Expressions.Val[])">
            <summary>
            Begin screen fade out.
            </summary>
            <param name="context">The game context</param>
            <param name="ps">
              Parameters: 
                NONE
            </param>
            <returns>NULL</returns>
        </member>
        <member name="F:SWEndor.UI.Forms.BackgroundForm.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:SWEndor.UI.Forms.BackgroundForm.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:SWEndor.UI.Forms.BackgroundForm.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:SWEndor.UI.Forms.StatForm.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:SWEndor.UI.Forms.StatForm.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:SWEndor.UI.Forms.StatForm.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:SWEndor.UI.Forms.UIControls.ucPoolCache.components">
            <summary> 
            Required designer variable.
            </summary>
        </member>
        <member name="M:SWEndor.UI.Forms.UIControls.ucPoolCache.Dispose(System.Boolean)">
            <summary> 
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:SWEndor.UI.Forms.UIControls.ucPoolCache.InitializeComponent">
            <summary> 
            Required method for Designer support - do not modify 
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:SWEndor.UI.Forms.UIControls.ucSound.components">
            <summary> 
            Required designer variable.
            </summary>
        </member>
        <member name="M:SWEndor.UI.Forms.UIControls.ucSound.Dispose(System.Boolean)">
            <summary> 
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:SWEndor.UI.Forms.UIControls.ucSound.InitializeComponent">
            <summary> 
            Required method for Designer support - do not modify 
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:SWEndor.UI.Forms.UIControls.ucStatObjects.components">
            <summary> 
            Required designer variable.
            </summary>
        </member>
        <member name="M:SWEndor.UI.Forms.UIControls.ucStatObjects.Dispose(System.Boolean)">
            <summary> 
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:SWEndor.UI.Forms.UIControls.ucStatObjects.InitializeComponent">
            <summary> 
            Required method for Designer support - do not modify 
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:SWEndor.UI.Forms.GameForm.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:SWEndor.UI.Forms.GameForm.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:SWEndor.UI.Forms.GameForm.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="T:SWEndor.ScopeGlobals">
            <summary>
            Defines the global scopes
            </summary>
        </member>
        <member name="T:SWEndor.Globals">
            <summary>
            Defines the global values
            </summary>
        </member>
        <member name="F:SWEndor.Globals.MajorVersion">
            <summary>The major version of the application</summary>
        </member>
        <member name="F:SWEndor.Globals.MinorVersion">
            <summary>The minor version of the application</summary>
        </member>
        <member name="F:SWEndor.Globals.Version">
            <summary>The application version</summary>
        </member>
        <member name="F:SWEndor.Globals.PI">
            <summary>The value of PI</summary>
        </member>
        <member name="F:SWEndor.Globals.Rad2Deg">
            <summary>The conversion ratio from radian measure to degree measure</summary>
        </member>
        <member name="F:SWEndor.Globals.Deg2Rad">
            <summary>The conversion ratio from degree measure to radian measure</summary>
        </member>
        <member name="F:SWEndor.Globals.LaserSpeed">
            <summary>The laser speed</summary>
        </member>
        <member name="F:SWEndor.Globals.ActorLimit">
            <summary>The factory object limit</summary>
        </member>
        <member name="F:SWEndor.Globals.ImminentCollisionFactor">
            <summary>The collision factor as a multipler to object speed</summary>
        </member>
        <member name="F:SWEndor.Globals.AcquisitionRange">
            <summary>The targeter acquisition range</summary>
        </member>
        <member name="M:SWEndor.Program.Main">
            <summary>
            The main entry point for the application.
            </summary>
        </member>
        <member name="T:SWEndor.Properties.Resources">
            <summary>
              A strongly-typed resource class, for looking up localized strings, etc.
            </summary>
        </member>
        <member name="P:SWEndor.Properties.Resources.ResourceManager">
            <summary>
              Returns the cached ResourceManager instance used by this class.
            </summary>
        </member>
        <member name="P:SWEndor.Properties.Resources.Culture">
            <summary>
              Overrides the current thread's CurrentUICulture property for all
              resource lookups using this strongly typed resource class.
            </summary>
        </member>
    </members>
</doc>
