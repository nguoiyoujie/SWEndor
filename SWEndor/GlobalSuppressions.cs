
// This file is used by Code Analysis to maintain SuppressMessage 
// attributes that are applied to this project.
// Project-level suppressions either have no target or are given 
// a specific target and scoped to a namespace, type, member, etc.

[assembly: System.Diagnostics.CodeAnalysis.SuppressMessage("Performance", "HeapAnalyzerMethodGroupAllocationRule:Delegate allocation from a method group", Justification = "<Pending>")]

[assembly: System.Diagnostics.CodeAnalysis.SuppressMessage("Performance", "HeapAnalyzerStringConcatRule:Implicit string concatenation allocation", Justification = "<Pending>", Scope = "member", Target = "~M:FMOD.System.createChannelGroup(System.String,FMOD.ChannelGroup@)~FMOD.RESULT")]
[assembly: System.Diagnostics.CodeAnalysis.SuppressMessage("Performance", "HeapAnalyzerStringConcatRule:Implicit string concatenation allocation", Justification = "<Pending>", Scope = "member", Target = "~M:FMOD.System.createSound(System.String,FMOD.MODE,FMOD.CREATESOUNDEXINFO@,FMOD.Sound@)~FMOD.RESULT")]
[assembly: System.Diagnostics.CodeAnalysis.SuppressMessage("Performance", "HeapAnalyzerStringConcatRule:Implicit string concatenation allocation", Justification = "<Pending>", Scope = "member", Target = "~M:FMOD.System.createSoundGroup(System.String,FMOD.SoundGroup@)~FMOD.RESULT")]
[assembly: System.Diagnostics.CodeAnalysis.SuppressMessage("Performance", "HeapAnalyzerStringConcatRule:Implicit string concatenation allocation", Justification = "<Pending>", Scope = "member", Target = "~M:FMOD.System.createStream(System.String,FMOD.MODE,FMOD.CREATESOUNDEXINFO@,FMOD.Sound@)~FMOD.RESULT")]
[assembly: System.Diagnostics.CodeAnalysis.SuppressMessage("Performance", "HeapAnalyzerStringConcatRule:Implicit string concatenation allocation", Justification = "<Pending>", Scope = "member", Target = "~M:FMOD.System.loadPlugin(System.String,System.UInt32@,System.UInt32)~FMOD.RESULT")]
[assembly: System.Diagnostics.CodeAnalysis.SuppressMessage("Performance", "HeapAnalyzerStringConcatRule:Implicit string concatenation allocation", Justification = "<Pending>", Scope = "member", Target = "~M:FMOD.System.setNetworkProxy(System.String)~FMOD.RESULT")]
[assembly: System.Diagnostics.CodeAnalysis.SuppressMessage("Performance", "HeapAnalyzerStringConcatRule:Implicit string concatenation allocation", Justification = "<Pending>", Scope = "member", Target = "~M:FMOD.System.setPluginPath(System.String)~FMOD.RESULT")]

[assembly: System.Diagnostics.CodeAnalysis.SuppressMessage("Performance", "HeapAnalyzerBoxingRule:Value type to reference type conversion allocation for string concatenation", Justification = "<Pending>", Scope = "member", Target = "~M:FMOD.System.createChannelGroup(System.String,FMOD.ChannelGroup@)~FMOD.RESULT")]
[assembly: System.Diagnostics.CodeAnalysis.SuppressMessage("Performance", "HeapAnalyzerBoxingRule:Value type to reference type conversion causing boxing allocation", Justification = "<Pending>", Scope = "member", Target = "~M:FMOD.System.createSound(System.Byte[],FMOD.MODE,FMOD.CREATESOUNDEXINFO@,FMOD.Sound@)~FMOD.RESULT")]
[assembly: System.Diagnostics.CodeAnalysis.SuppressMessage("Performance", "HeapAnalyzerBoxingRule:Value type to reference type conversion allocation for string concatenation", Justification = "<Pending>", Scope = "member", Target = "~M:FMOD.System.createSound(System.String,FMOD.MODE,FMOD.CREATESOUNDEXINFO@,FMOD.Sound@)~FMOD.RESULT")]
[assembly: System.Diagnostics.CodeAnalysis.SuppressMessage("Performance", "HeapAnalyzerBoxingRule:Value type to reference type conversion causing boxing allocation", Justification = "<Pending>", Scope = "member", Target = "~M:FMOD.System.createSound(System.String,FMOD.MODE,FMOD.Sound@)~FMOD.RESULT")]
[assembly: System.Diagnostics.CodeAnalysis.SuppressMessage("Performance", "HeapAnalyzerBoxingRule:Value type to reference type conversion allocation for string concatenation", Justification = "<Pending>", Scope = "member", Target = "~M:FMOD.System.createSoundGroup(System.String,FMOD.SoundGroup@)~FMOD.RESULT")]
[assembly: System.Diagnostics.CodeAnalysis.SuppressMessage("Performance", "HeapAnalyzerBoxingRule:Value type to reference type conversion causing boxing allocation", Justification = "<Pending>", Scope = "member", Target = "~M:FMOD.System.createStream(System.Byte[],FMOD.MODE,FMOD.CREATESOUNDEXINFO@,FMOD.Sound@)~FMOD.RESULT")]
[assembly: System.Diagnostics.CodeAnalysis.SuppressMessage("Performance", "HeapAnalyzerBoxingRule:Value type to reference type conversion allocation for string concatenation", Justification = "<Pending>", Scope = "member", Target = "~M:FMOD.System.createStream(System.String,FMOD.MODE,FMOD.CREATESOUNDEXINFO@,FMOD.Sound@)~FMOD.RESULT")]
[assembly: System.Diagnostics.CodeAnalysis.SuppressMessage("Performance", "HeapAnalyzerBoxingRule:Value type to reference type conversion causing boxing allocation", Justification = "<Pending>", Scope = "member", Target = "~M:FMOD.System.createStream(System.String,FMOD.MODE,FMOD.Sound@)~FMOD.RESULT")]
[assembly: System.Diagnostics.CodeAnalysis.SuppressMessage("Performance", "HeapAnalyzerBoxingRule:Value type to reference type conversion causing boxing allocation", Justification = "<Pending>", Scope = "member", Target = "~M:FMOD.System.getAdvancedSettings(FMOD.ADVANCEDSETTINGS@)~FMOD.RESULT")]
[assembly: System.Diagnostics.CodeAnalysis.SuppressMessage("Performance", "HeapAnalyzerBoxingRule:Value type to reference type conversion allocation for string concatenation", Justification = "<Pending>", Scope = "member", Target = "~M:FMOD.System.loadPlugin(System.String,System.UInt32@,System.UInt32)~FMOD.RESULT")]
[assembly: System.Diagnostics.CodeAnalysis.SuppressMessage("Performance", "HeapAnalyzerBoxingRule:Value type to reference type conversion causing boxing allocation", Justification = "<Pending>", Scope = "member", Target = "~M:FMOD.System.setAdvancedSettings(FMOD.ADVANCEDSETTINGS@)~FMOD.RESULT")]
[assembly: System.Diagnostics.CodeAnalysis.SuppressMessage("Performance", "HeapAnalyzerBoxingRule:Value type to reference type conversion allocation for string concatenation", Justification = "<Pending>", Scope = "member", Target = "~M:FMOD.System.setNetworkProxy(System.String)~FMOD.RESULT")]
[assembly: System.Diagnostics.CodeAnalysis.SuppressMessage("Performance", "HeapAnalyzerBoxingRule:Value type to reference type conversion allocation for string concatenation", Justification = "<Pending>", Scope = "member", Target = "~M:FMOD.System.setPluginPath(System.String)~FMOD.RESULT")]
[assembly: System.Diagnostics.CodeAnalysis.SuppressMessage("Performance", "HeapAnalyzerStringConcatRule:Implicit string concatenation allocation", Justification = "<Pending>", Scope = "member", Target = "~M:SWEndor.Sound.SoundManager.Piece.Parser.Parse(SWEndor.FileFormat.INI.INIFile,System.String)~SWEndor.Sound.SoundManager.Piece")]
[assembly: System.Diagnostics.CodeAnalysis.SuppressMessage("Performance", "HeapAnalyzerBoxingRule:Value type to reference type conversion allocation for string concatenation", Justification = "<Pending>", Scope = "member", Target = "~M:SWEndor.Sound.SoundManager.Piece.Parser.Parse(SWEndor.FileFormat.INI.INIFile,System.String)~SWEndor.Sound.SoundManager.Piece")]
[assembly: System.Diagnostics.CodeAnalysis.SuppressMessage("Performance", "HeapAnalyzerClosureSourceRule:Closure Allocation Source", Justification = "<Pending>", Scope = "member", Target = "~M:SWEndor.Game.Run")]

[assembly: System.Diagnostics.CodeAnalysis.SuppressMessage("Performance", "HeapAnalyzerImplicitParamsRule:Array allocation for params parameter", Justification = "<Pending>", Scope = "member", Target = "~F:SWEndor.Globals.Version")]

[assembly: System.Diagnostics.CodeAnalysis.SuppressMessage("Performance", "HeapAnalyzerBoxingRule:Value type to reference type conversion causing boxing allocation", Justification = "<Pending>", Scope = "member", Target = "~F:SWEndor.Globals.Version")]