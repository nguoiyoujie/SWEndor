--------------------------------------------------------------------------------------------------------------------------------
Shaders
--------------------------------------------------------------------------------------------------------------------------------

Shader files allow customization of the graphical representation of meshes shown in the game.
Each shader setup file must be placed in the /Data/Shaders directory or any subdirectories for the game to recognize it.
Both shader .fx and .ini files must be placed on the same directory, otherwise only the .fx file is loaded

--------------------------------------------------------------------------------------------------------------------------------
Shader File (*.fx)
Format: Direct3D File
--------------------------------------------------------------------------------------------------------------------------------

The .fx file is your shader file. It is a HLSL format file for Direct3D, with semantics provided by TrueVision3D that powers the 
graphics of this game. Shaders are processed in the GPU, allowing the CPU to focus on running the game and other essentials.
Consult MSDN for HLSL features.

--------------------------------------------------------------------------------------------------------------------------------
Shader Setup File (*.ini)
Format: INI File
--------------------------------------------------------------------------------------------------------------------------------

Shader setup files are optional, but provide an additional level of customization for your shader files. They are largely used 
to allow the game to provide parameter values to the GPU, reducing the maintanence of the .fx files. The [DYNAMIC] feature 
allows the game to feed in-game values to the shader parameters, allowing real-time feedback. 


[General]
--------------------------------------------------------------------------------------------------------------------------------
Key             | Value Type      | Description
--------------------------------------------------------------------------------------------------------------------------------
InitialCount      int               The number of shader instances to generate at load time. 
                                    Shaders are expensive. The best way is to avoid using many of them.
                                    However, if their use is unavoidable, use this feature to create them at game load, thus 
                                    saving CPU cycles when playing the game.
                                    This value is not used when [DYNAMIC] is not used; the game is able to optimize to use a
                                    single shader instance in this case.

[BOOL]
--------------------------------------------------------------------------------------------------------------------------------
Key             | Value Type      | Description
--------------------------------------------------------------------------------------------------------------------------------
<parameter>       bool              Feeds the parameter value to the parameter of the same name in the corresponding .fx file

[FLOAT]
--------------------------------------------------------------------------------------------------------------------------------
Key             | Value Type      | Description
--------------------------------------------------------------------------------------------------------------------------------
<parameter>       float             Feeds the parameter value to the parameter of the same name in the corresponding .fx file

[VEC2]
--------------------------------------------------------------------------------------------------------------------------------
Key             | Value Type      | Description
--------------------------------------------------------------------------------------------------------------------------------
<parameter>       float[2]          Feeds the parameter value to the parameter of the same name in the corresponding .fx file

[VEC3]
--------------------------------------------------------------------------------------------------------------------------------
Key             | Value Type      | Description
--------------------------------------------------------------------------------------------------------------------------------
<parameter>       float[3]          Feeds the parameter value to the parameter of the same name in the corresponding .fx file

[TEXTURE]
--------------------------------------------------------------------------------------------------------------------------------
Key             | Value Type      | Description
--------------------------------------------------------------------------------------------------------------------------------
<parameter>       string            Obtains the texture from the given filepath, loads it into memory, and feeds it to parameter 
                                    of the same name in the corresponding .fx file

[TEXTURE_RANDOM]
--------------------------------------------------------------------------------------------------------------------------------
Key             | Value Type      | Description
--------------------------------------------------------------------------------------------------------------------------------
<parameter>       string[]          Selects (at load time) one out of the given values, obtains the texture from the given 
                                    filepath, loads it into memory, and feeds it to parameter of the same name in the 
                                    corresponding .fx file
                                    Useful if you want to randomize noise textures.

[DYNAMIC]
--------------------------------------------------------------------------------------------------------------------------------
Key             | Value Type      | Description
--------------------------------------------------------------------------------------------------------------------------------
<parameter>       enumerable        Links a real-time value to the parameter of the same name in the corresponding .fx file
        Accepted values are:
                GAME_TIME                    The current game clock, in in-game seconds
                CREATION_TIME                The in-game time when the actor was spawned, in in-game seconds
                DYING_INTERVAL               The actor's dying interval (usually for transition to DEAD state), in in-game seconds
                DYING_TIME_REMAINING         Time before the actor transits to DEAD state. If not active, = DYING_INTERVAL.
                HP_FRAC                      The actor's HP / maxHP
                SPEED                        The actor's current speed






